model:
  arch: textnet_big.Textnet_Big
  normalize:
    normalize_type: sync_bn
    bn_group_size: 8
  scale: [1, 8] # T: out sequence length, W: input image's width, T = for i in range(len(scale)): int(W / scale[i]) + shift[i]
  shift: [-1, 1]
  kwargs:
    in_channels: 1
dataset:
  train:
    train_root_ceph: ''
    train_source_ceph:
    train_root: ''
    train_source: /mnt/lustre/ocrgroup/dataset/shouxie_liangd/shouxie_shijuan+caiji+zuowen_repeat1+zuoye_train_replace_lower.txt
    augmentation:
      kwargs:
        perspective_prob: 0.5
        perspective_offset: 0.25 # for every corner point, the max offset of x and y direction is perspective_offset * new_h
        new_width_prob: 1
        min_new_width: 0.7
        max_new_width: 1.3
        reverse_prob: 0
    kwargs:
      max_w: 1000 # if image's width (after resize) > max_w, skip this image
      max_label_length: 100
      min_std: 1 # for gray image, if std < min_std, skip it
  val:
    val_root_ceph: ''
    val_source_ceph:
    val_root: ''
    val_source: /mnt/lustre/ocrgroup/dataset/shouxie_liangd/zuowen_label_test.txt
  dict: /mnt/lustre/liuxu2/datasets/hw_dict.txt
  batch_size: 8 # batch size on one GPU
  num_workers: 0
  new_h: 48 # resize image's height to new_h and keep the aspect ratio
  color: False # RGB if True else Gray
solver:
  optimizer:
    type: SGD
    base_lr: 0.01
    kwargs:
      momentum: 0.9
      weight_decay: 0.0001
      nesterov: True
  lr_scheduler:
    lr_mode: step
    milestones: [120000, 180000]
    lr_mults: 0.1
    warmup_from: 0.0001 # linear increase
    warmup_steps: 10000
    max_iter: 200000
  clip_type: norm # norm or value
  max_norm: 10
checkpoint:
  checkpoint_freq: 1000
  checkpoint_path: # finetune from checkpoint_path
  recover: True # True if you want to recover optimizer status from checkpoint_path
  strict: True # whether to strictly enforce that the keys in :attr:`state_dict` match the keys returned by this module's
phase: train
print_freq: 10
val_freq: 1000
work_dir: experiments/textnet_big/print_align
