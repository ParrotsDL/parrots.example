task:
    # Required (change partition, num_gpus or others where necessary)
    template: "sh runner/{framework}/train.sh pat_dev {gpus} {model} {py_args}"
    # Required
    search_args:
        - type: Nested
          value: [
                    # (un)commit your config here
                    # pod
                    {'framework': 'pod', 'gpus': 8, 'model': 'faster-rcnn-R50-FPN-1x.short', 'py_args': '--pavi'},
                    {'framework': 'pod', 'gpus': 8, 'model': 'faster-rcnn-R50-FPN-1x_mix.short', 'py_args': '--pavi'},
                    {'framework': 'pod', 'gpus': 8, 'model': 'retinanet-R50-1x.short', 'py_args': '--pavi'},
                    # {'framework': 'pod', 'gpus': 8, 'model': 'mask-rcnn-R50-FPN-1x.short', 'py_args': '--pavi'},
                    # {'framework': 'pod', 'gpus': 8, 'model': 'mask-rcnn-R50-FPN-1x_mix.short', 'py_args': '--pavi'},
                    # {'framework': 'pod', 'gpus': 8, 'model': 'keypoint-rcnn-R50-FPN-1x.short', 'py_args': '--pavi'},
                    # {'framework': 'pod', 'gpus': 8, 'model': 'keypoint-rcnn-R50-FPN-1x_mix.short', 'py_args': '--pavi'},
                    # {'framework': 'pod', 'gpus': 8, 'model': 'rfcn-R101-ohem-deform-1x.short', 'py_args': '--pavi'},
                    # {'framework': 'pod', 'gpus': 8, 'model': 'cascade-rcnn-R50-FPN-1x.short', 'py_args': '--pavi'},
                    # {'framework': 'pod', 'gpus': 8, 'model': 'faster-rcnn-mobilenet-FPN-1x.short', 'py_args': '--pavi'},
                    # {'framework': 'pod', 'gpus': 8, 'model': 'faster-rcnn-mobilenet-FPN-1x_mix.short', 'py_args': '--pavi'},
                    # {'framework': 'pod', 'gpus': 8, 'model': 'faster-rcnn-shufflenet-FPN-1x.short', 'py_args': '--pavi'},
                    # {'framework': 'pod', 'gpus': 8, 'model': 'rfcn-mobilenet-1x.short', 'py_args': '--pavi'},
                    # {'framework': 'pod', 'gpus': 8, 'model': 'rfcn-shufflenet-1x.short', 'py_args': '--pavi'},
                    # {'framework': 'pod', 'gpus': 8, 'model': 'grid-rcnn-R50-FPN-2x.short', 'py_args': '--pavi'},
                    # {'framework': 'pod', 'gpus': 8, 'model': 'retinanet-R50-ghm-1x.short', 'py_args': '--pavi'},
                    # {'framework': 'pod', 'gpus': 8, 'model': 'faster-rcnn-R50-FPN-1x-DCN@C3-C5.short', 'py_args': '--pavi'},
                    # {'framework': 'pod', 'gpus': 8, 'model': 'retinanet-R50-GN-FA.short', 'py_args': '--pavi'},
                    # {'framework': 'pod', 'gpus': 8, 'model': 'faster-rcnn-R50-NASFPN-1x_mix.short', 'py_args': '--pavi'},
                    # {'framework': 'pod', 'gpus': 8, 'model': 'faster-rcnn-R50-PAFPN-1x_mix.short', 'py_args': '--pavi'},
                    # alphatrion
                    {'framework': 'alphatrion', 'gpus': 8, 'model': 'mobilenet_v2_fp32_benchmark', 'py_args': '--pavi.use true'},
                    {'framework': 'alphatrion', 'gpus': 8, 'model': 'mobilenet_v2_fp16_benchmark', 'py_args': '--pavi.use true'},
                    # {'framework': 'alphatrion', 'gpus': 8, 'model': 'se_resnet50_fp32_benchmark', 'py_args': '--pavi.use true'},
                    # {'framework': 'alphatrion', 'gpus': 8, 'model': 'se_resnet50_fp16_benchmark', 'py_args': '--pavi.use true'},
                    # {'framework': 'alphatrion', 'gpus': 8, 'model': 'resnet50_fp32_benchmark', 'py_args': '--pavi.use true'},
                    # {'framework': 'alphatrion', 'gpus': 8, 'model': 'resnet50_fp16_benchmark', 'py_args': '--pavi.use true'},
                    # {'framework': 'alphatrion', 'gpus': 8, 'model': 'resnet101_fp32_benchmark', 'py_args': '--pavi.use true'},
                    # {'framework': 'alphatrion', 'gpus': 8, 'model': 'resnet101_fp16_benchmark', 'py_args': '--pavi.use true'},
                    # ssd
                    {'framework': 'ssd', 'gpus': 8, 'model': 'ssd_FSAF_benchmark', 'py_args': '--PAVI.USE true'},
                    {'framework': 'ssd', 'gpus': 8, 'model': 'ssd_Retina_benchmark', 'py_args': '--PAVI.USE true'},
                    # alphatrion_nas
                    {'framework': 'alphatrion_nas', 'gpus': 8, 'model': 'super_resnet_range1_benchmark', 'py_args': '--pavi.use true'},
                    {'framework': 'alphatrion_nas', 'gpus': 8, 'model': 'super_resnet_range1_fp16_benchmark', 'py_args': '--pavi.use true'},             
                    # seg_nas
                    {'framework': 'seg_nas', 'gpus': 8, 'model': 'single_path_oneshot_benchmark', 'py_args': '--pavi'},
                    # nas_lite
                    {'framework': 'nas_lite', 'gpus': 32, 'model': 'proxyless_search_benchmark', 'py_args': '--pavi'},
                    # example
                    {'framework': 'example', 'gpus': 8, 'model': "dpn92_mix.short", 'py_args': '--pavi'},
                    {'framework': 'example', 'gpus': 8, 'model': "dpn92.short", 'py_args': '--pavi'},
                    {'framework': 'example', 'gpus': 8, 'model': "inception_resnet_mix.short", 'py_args': '--pavi'},
                    # {'framework': 'example', 'gpus': 8, 'model': "inception_resnet.short", 'py_args': '--pavi'},
                    # {'framework': 'example', 'gpus': 8, 'model': "inception_v2_mix.short", 'py_args': '--pavi'},
                    # {'framework': 'example', 'gpus': 8, 'model': "inception_v2.short", 'py_args': '--pavi'},
                    # {'framework': 'example', 'gpus': 8, 'model': "inception_v3_mix.short", 'py_args': '--pavi'},
                    # {'framework': 'example', 'gpus': 8, 'model': "inception_v3.short", 'py_args': '--pavi'},
                    # {'framework': 'example', 'gpus': 8, 'model': "inception_v4_mix.short", 'py_args': '--pavi'},
                    # {'framework': 'example', 'gpus': 8, 'model': "inception_v4.short", 'py_args': '--pavi'},
                    # {'framework': 'example', 'gpus': 8, 'model': "mobile_v2_mix.short", 'py_args': '--pavi'},
                    # {'framework': 'example', 'gpus': 8, 'model': "mobile_v2.short", 'py_args': '--pavi'},
                    # {'framework': 'example', 'gpus': 8, 'model': "resnet101_mix.short", 'py_args': '--pavi'},
                    # {'framework': 'example', 'gpus': 8, 'model': "resnet101.short", 'py_args': '--pavi'},
                    # {'framework': 'example', 'gpus': 8, 'model': "resnet152_mix.short", 'py_args': '--pavi'},
                    # {'framework': 'example', 'gpus': 8, 'model': "resnet152.short", 'py_args': '--pavi'},
                    # {'framework': 'example', 'gpus': 8, 'model': "resnet18_mix.short", 'py_args': '--pavi'},
                    # {'framework': 'example', 'gpus': 8, 'model': "resnet18.short", 'py_args': '--pavi'},
                    # {'framework': 'example', 'gpus': 8, 'model': "resnet50_mix.short", 'py_args': '--pavi'},
                    # {'framework': 'example', 'gpus': 8, 'model': "resnet50.short", 'py_args': '--pavi'},
                    # {'framework': 'example', 'gpus': 8, 'model': "se_resnet50_mix.short", 'py_args': '--pavi'},
                    # {'framework': 'example', 'gpus': 8, 'model': "se_resnet50.short", 'py_args': '--pavi'},
                    # {'framework': 'example', 'gpus': 8, 'model': "shuffle_v2_mix.short", 'py_args': '--pavi'},
                    # {'framework': 'example', 'gpus': 8, 'model': "shuffle_v2.short", 'py_args': '--pavi'},
                ]
    # Optional
    # callback: "cat"
    callback: "python autotest/parrots_test_callback.py {framework} {model}"

searcher:
    # Support GridSearcher, RandomSearcher, SkoptSearcher
    type: GridSearcher
    # Required
    reward_attribute: acc

scheduler:
    type: FIFO
    parallel_size: 8
    stop_criterion:
        max_tries: 100

# Optional
pavi:
    compare:
        name: parrots.test.benchmark

slurm_job_id_monitor: true

