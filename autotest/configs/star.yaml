star_topdown_resnet50:
  __benchmark_avg_iter_time(s): [2.273, '>', '5%'] # 1.894 x 1.2
  __benchmark_mem_alloc(mb): [31125, '>', '5%'] # 25938 x 1.2
  __benchmark_mem_cached(mb): [36405, '>', '5%'] # 30338 x 1.2
  __benchmark_pure_training_time(h): [100000, '>', '5%']
  __benchmark_total_time(h): [100000, '>', '5%']
  Train_Accuracy: [0, '<', '5%']
star_topdown_resnest50:
  __benchmark_avg_iter_time(s): [1.2864, '>', '5%'] # 1.072 x 1.2
  __benchmark_mem_alloc(mb): [22459, '>', '5%'] # 18716 x 1.2
  __benchmark_mem_cached(mb): [26188, '>', '5%'] # 21824 x 1.2
  __benchmark_pure_training_time(h): [100000, '>', '5%']
  __benchmark_total_time(h): [100000, '>', '5%']
  Train_Accuracy: [0, '<', '5%']
star_topdown_jnet:
  __benchmark_avg_iter_time(s): [1.210, '>', '5%'] # 1.009 x 1.2
  __benchmark_mem_alloc(mb): [5443, '>', '5%'] # 4536 x 1.2
  __benchmark_mem_cached(mb): [6868, '>', '5%'] # 5724 x 1.2
  __benchmark_pure_training_time(h): [100000, '>', '5%']
  __benchmark_total_time(h): [100000, '>', '5%']
  Train_Accuracy: [0, '<', '5%']
star_topdown_hrnet32:
  __benchmark_avg_iter_time(s): [100000, '>', '5%'] # 1.009 x 1.2
  __benchmark_mem_alloc(mb): [100000, '>', '5%'] # 4536 x 1.2
  __benchmark_mem_cached(mb): [100000, '>', '5%'] # 5724 x 1.2
  __benchmark_pure_training_time(h): [100000, '>', '5%']
  __benchmark_total_time(h): [100000, '>', '5%']
  Train_Accuracy: [0, '<', '5%']
star_bottomup_hrnet32:
  __benchmark_avg_iter_time(s): [100000, '>', '5%'] # 1.009 x 1.2
  __benchmark_mem_alloc(mb): [100000, '>', '5%'] # 4536 x 1.2
  __benchmark_mem_cached(mb): [100000, '>', '5%'] # 5724 x 1.2
  __benchmark_pure_training_time(h): [100000, '>', '5%']
  __benchmark_total_time(h): [100000, '>', '5%']
  Train_Accuracy: [0, '<', '5%']
star_bottomup_jnet:
  __benchmark_avg_iter_time(s): [100000, '>', '5%'] # 1.009 x 1.2
  __benchmark_mem_alloc(mb): [100000, '>', '5%'] # 4536 x 1.2
  __benchmark_mem_cached(mb): [100000, '>', '5%'] # 5724 x 1.2
  __benchmark_pure_training_time(h): [100000, '>', '5%']
  __benchmark_total_time(h): [100000, '>', '5%']
  Train_Accuracy: [0, '<', '5%']
