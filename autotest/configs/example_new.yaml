example_resnet50: # Required.
  __benchmark_avg_iter_time(s): [0.192, 'has_to_lower'] # 0.160 x 1.2
  __benchmark_mem_alloc(mb): [6232, 'has_to_lower'] # 5194 x 1.2
  __benchmark_mem_cached(mb): [6456, 'has_to_lower'] # 5380 x 1.2
  __benchmark_pure_training_time(h): [100000, 'has_to_lower']
  __benchmark_total_time(h): [100000, 'has_to_lower']
  Accuracy_Test_top1: [0, 'has_to_higher']
example_resnet50.short: # Required.
  __benchmark_avg_iter_time(s): [0.192, 'has_to_lower'] # 0.160 x 1.2
  __benchmark_mem_alloc(mb): [6232, 'has_to_lower'] # 5194 x 1.2
  __benchmark_mem_cached(mb): [6456, 'has_to_lower'] # 5380 x 1.2
  __benchmark_pure_training_time(h): [100000, 'has_to_lower']
  __benchmark_total_time(h): [100000, 'has_to_lower']
  Accuracy_Test_top1: [0, 'has_to_higher']
example_resnet50.short.dummy_data: # Required.
  __benchmark_avg_iter_time(s): [0.192, 'has_to_lower'] # 0.160 x 1.2
  __benchmark_mem_alloc(mb): [6232, 'has_to_lower'] # 5194 x 1.2
  __benchmark_mem_cached(mb): [6456, 'has_to_lower'] # 5380 x 1.2
  __benchmark_pure_training_time(h): [100000, 'has_to_lower']
  __benchmark_total_time(h): [100000, 'has_to_lower']
  Accuracy_Test_top1: [0, 'has_to_higher']
example_resnet50.benchmark: # Required.
  __benchmark_avg_iter_time(s): [0.192, 'has_to_lower'] # 0.160 x 1.2
  __benchmark_mem_alloc(mb): [6232, 'has_to_lower'] # 5194 x 1.2
  __benchmark_mem_cached(mb): [6456, 'has_to_lower'] # 5380 x 1.2
  __benchmark_pure_training_time(h): [0.278, 'has_to_lower'] # 0.232 x 1.2
  __benchmark_total_time(h): [0.282, 'has_to_lower'] # 0.235 x 1.2
  Accuracy_Test_top1: [14.122, 'has_to_higher'] # 15.122 - 1
example_resnet50_sync.short: # Required.
  __benchmark_avg_iter_time(s): [100000, 'has_to_lower']
  __benchmark_mem_alloc(mb): [100000, 'has_to_lower']
  __benchmark_mem_cached(mb): [100000, 'has_to_lower']
  __benchmark_pure_training_time(h): [100000, 'has_to_lower']
  __benchmark_total_time(h): [100000, 'has_to_lower']
  Accuracy_Test_top1: [0, 'has_to_higher']
example_resnet50_sync.short.dummy_data: # Required.
  __benchmark_avg_iter_time(s): [100000, 'has_to_lower']
  __benchmark_mem_alloc(mb): [100000, 'has_to_lower']
  __benchmark_mem_cached(mb): [100000, 'has_to_lower']
  __benchmark_pure_training_time(h): [100000, 'has_to_lower']
  __benchmark_total_time(h): [100000, 'has_to_lower']
  Accuracy_Test_top1: [0, 'has_to_higher']  
example_resnet50_sync.benchmark: # Required.
  __benchmark_avg_iter_time(s): [100000, 'has_to_lower']
  __benchmark_mem_alloc(mb): [100000, 'has_to_lower']
  __benchmark_mem_cached(mb): [100000, 'has_to_lower']
  __benchmark_pure_training_time(h): [100000, 'has_to_lower']
  __benchmark_total_time(h): [100000, 'has_to_lower']
  Accuracy_Test_top1: [0, 'has_to_higher']
example_resnet50_mix: # Required.
  __benchmark_avg_iter_time(s): [0.196, 'has_to_lower'] # 0.163 x 1.2
  __benchmark_mem_alloc(mb): [4765, 'has_to_lower'] # 3971 x 1.2
  __benchmark_mem_cached(mb): [4922, 'has_to_lower'] # 4102 x 1.2
  __benchmark_pure_training_time(h): [100000, 'has_to_lower'] # 0.227 x 1.2
  __benchmark_total_time(h): [100000, 'has_to_lower'] # 0.230 x 1.2
  Accuracy_Test_top1: [0, 'has_to_higher'] # 15.790 - 1
example_resnet50_mix.benchmark: # Required.
  __benchmark_avg_iter_time(s): [0.196, 'has_to_lower'] # 0.163 x 1.2
  __benchmark_mem_alloc(mb): [4765, 'has_to_lower'] # 3971 x 1.2
  __benchmark_mem_cached(mb): [4922, 'has_to_lower'] # 4102 x 1.2
  __benchmark_pure_training_time(h): [0.272, 'has_to_lower'] # 0.227 x 1.2
  __benchmark_total_time(h): [0.276, 'has_to_lower'] # 0.230 x 1.2
  Accuracy_Test_top1: [14.790, 'has_to_higher'] # 15.790 - 1
example_se_resnet50: # Required.
  __benchmark_avg_iter_time(s): [0.196, 'has_to_lower'] # 0.164 x 1.2
  __benchmark_mem_alloc(mb): [6891, 'has_to_lower'] # 5743 x 1.2
  __benchmark_mem_cached(mb): [7065, 'has_to_lower'] # 5888 x 12.
  __benchmark_pure_training_time(h): [100000, 'has_to_lower'] # 0.228 x 1.2
  __benchmark_total_time(h): [100000, 'has_to_lower'] # 0.231 x 1.2
  Accuracy_Test_top1: [0, 'has_to_higher'] # 18.200 - 1
example_se_resnet50.short: # Required.
  __benchmark_avg_iter_time(s): [0.196, 'has_to_lower'] # 0.164 x 1.2
  __benchmark_mem_alloc(mb): [6891, 'has_to_lower'] # 5743 x 1.2
  __benchmark_mem_cached(mb): [7065, 'has_to_lower'] # 5888 x 12.
  __benchmark_pure_training_time(h): [100000, 'has_to_lower'] # 0.228 x 1.2
  __benchmark_total_time(h): [100000, 'has_to_lower'] # 0.231 x 1.2
  Accuracy_Test_top1: [0, 'has_to_higher'] # 18.200 - 1
example_se_resnet50.benchmark: # Required.
  __benchmark_avg_iter_time(s): [0.196, 'has_to_lower'] # 0.164 x 1.2
  __benchmark_mem_alloc(mb): [6891, 'has_to_lower'] # 5743 x 1.2
  __benchmark_mem_cached(mb): [7065, 'has_to_lower'] # 5888 x 12.
  __benchmark_pure_training_time(h): [0.272, 'has_to_lower'] # 0.228 x 1.2
  __benchmark_total_time(h): [0.276, 'has_to_lower'] # 0.231 x 1.2
  Accuracy_Test_top1: [17.200, 'has_to_higher'] # 18.200 - 1
example_se_resnet50_mix: # Required.
  __benchmark_avg_iter_time(s): [0.184, 'has_to_lower'] # 0.153 x 1.2
  __benchmark_mem_alloc(mb): [5108, 'has_to_lower'] # 4257 x 1.2
  __benchmark_mem_cached(mb): [5227, 'has_to_lower'] # 4356 x 1.2
  __benchmark_pure_training_time(h): [100000, 'has_to_lower'] # 0.226 x 1.2
  __benchmark_total_time(h): [100000, 'has_to_lower'] # 0.229 x 1.2
  Accuracy_Test_top1: [0, 'has_to_higher'] # 16.436 - 1
example_se_resnet50_mix.benchmark: # Required.
  __benchmark_avg_iter_time(s): [0.184, 'has_to_lower'] # 0.153 x 1.2
  __benchmark_mem_alloc(mb): [5108, 'has_to_lower'] # 4257 x 1.2
  __benchmark_mem_cached(mb): [5227, 'has_to_lower'] # 4356 x 1.2
  __benchmark_pure_training_time(h): [0.272, 'has_to_lower'] # 0.226 x 1.2
  __benchmark_total_time(h): [0.276, 'has_to_lower'] # 0.229 x 1.2
  Accuracy_Test_top1: [15.436, 'has_to_higher'] # 16.436 - 1
example_inception_v4: # Required.
  __benchmark_avg_iter_time(s): [0.426, 'has_to_lower'] # 0.355 x 1.2
  __benchmark_mem_alloc(mb): [10117, 'has_to_lower'] # 8431 x 1.2
  __benchmark_mem_cached(mb): [10528, 'has_to_lower'] # 8774 x 1.2
  __benchmark_pure_training_time(h): [100000, 'has_to_lower'] # 0.502 x 1.2
  __benchmark_total_time(h): [100000, 'has_to_lower'] # 0.505 x 1.2
  Accuracy_Test_top1: [0, 'has_to_higher'] # 15.690 - 1
example_inception_v4.benchmark: # Required.
  __benchmark_avg_iter_time(s): [0.426, 'has_to_lower'] # 0.355 x 1.2
  __benchmark_mem_alloc(mb): [10117, 'has_to_lower'] # 8431 x 1.2
  __benchmark_mem_cached(mb): [10528, 'has_to_lower'] # 8774 x 1.2
  __benchmark_pure_training_time(h): [0.602, 'has_to_lower'] # 0.502 x 1.2
  __benchmark_total_time(h): [0.606, 'has_to_lower'] # 0.505 x 1.2
  Accuracy_Test_top1: [14.690, 'has_to_higher'] # 15.690 - 1
example_inception_v4_mix: # Required.
  __benchmark_avg_iter_time(s): [0.272, 'has_to_lower'] # 0.228 x 1.2
  __benchmark_mem_alloc(mb): [7422, 'has_to_lower'] # 6185 x 1.2
  __benchmark_mem_cached(mb): [7680, 'has_to_lower'] # 6400 x 1.2
  __benchmark_pure_training_time(h): [100000, 'has_to_lower'] # 0.330 x 1.2
  __benchmark_total_time(h): [100000, 'has_to_lower'] # 0.332 x 1.2
  Accuracy_Test_top1: [0, 'has_to_higher'] # 17.874 - 1
example_inception_v4_mix.benchmark: # Required.
  __benchmark_avg_iter_time(s): [0.272, 'has_to_lower'] # 0.228 x 1.2
  __benchmark_mem_alloc(mb): [7422, 'has_to_lower'] # 6185 x 1.2
  __benchmark_mem_cached(mb): [7680, 'has_to_lower'] # 6400 x 1.2
  __benchmark_pure_training_time(h): [0.396, 'has_to_lower'] # 0.330 x 1.2
  __benchmark_total_time(h): [0.398, 'has_to_lower'] # 0.332 x 1.2
  Accuracy_Test_top1: [16.874, 'has_to_higher'] # 17.874 - 1
example_shuffle_v2: # Required.
  __benchmark_avg_iter_time(s): [0.170, 'has_to_lower'] # 0.142 x 1.2
  __benchmark_mem_alloc(mb): [2213, 'has_to_lower'] # 1844 x 1.2
  __benchmark_mem_cached(mb): [2289, 'has_to_lower'] # 1908 x 1.2
  __benchmark_pure_training_time(h): [100000, 'has_to_lower'] # 0.229 x 1.2
  __benchmark_total_time(h): [100000, 'has_to_lower'] # 0.232 x 1.2
  Accuracy_Test_top1: [0, 'has_to_higher'] # 14.796 - 1
example_shuffle_v2.benchmark: # Required.
  __benchmark_avg_iter_time(s): [0.170, 'has_to_lower'] # 0.142 x 1.2
  __benchmark_mem_alloc(mb): [2213, 'has_to_lower'] # 1844 x 1.2
  __benchmark_mem_cached(mb): [2289, 'has_to_lower'] # 1908 x 1.2
  __benchmark_pure_training_time(h): [0.275, 'has_to_lower'] # 0.229 x 1.2
  __benchmark_total_time(h): [0.278, 'has_to_lower'] # 0.232 x 1.2
  Accuracy_Test_top1: [13.796, 'has_to_higher'] # 14.796 - 1
example_shuffle_v2_mix: # Required.
  __benchmark_avg_iter_time(s): [0.201, 'has_to_lower'] # 0.168 x 1.2
  __benchmark_mem_alloc(mb): [1819, 'has_to_lower'] # 1516 x 1.2
  __benchmark_mem_cached(mb): [1893, 'has_to_lower'] # 1578 x 1.2
  __benchmark_pure_training_time(h): [100000, 'has_to_lower'] # 0.225 x 1.2
  __benchmark_total_time(h): [100000, 'has_to_lower'] # 0.228 x 1.2
  Accuracy_Test_top1: [0, 'has_to_higher'] # 15.000 - 1
example_shuffle_v2_mix.benchmark: # Required.
  __benchmark_avg_iter_time(s): [0.201, 'has_to_lower'] # 0.168 x 1.2
  __benchmark_mem_alloc(mb): [1819, 'has_to_lower'] # 1516 x 1.2
  __benchmark_mem_cached(mb): [1893, 'has_to_lower'] # 1578 x 1.2
  __benchmark_pure_training_time(h): [0.270, 'has_to_lower'] # 0.225 x 1.2
  __benchmark_total_time(h): [0.273, 'has_to_lower'] # 0.228 x 1.2
  Accuracy_Test_top1: [14.000, 'has_to_higher'] # 15.000 - 1
example_mobile_v2: # Required.
  __benchmark_avg_iter_time(s): [0.135, 'has_to_lower'] # 0.113 x 1.2
  __benchmark_mem_alloc(mb): [4099, 'has_to_lower'] # 3416 x 1.2
  __benchmark_mem_cached(mb): [4240, 'has_to_lower'] # 3534 x 1.2
  __benchmark_pure_training_time(h): [100000, 'has_to_lower'] # 0.223 x 1.2
  __benchmark_total_time(h): [100000, 'has_to_lower'] # 0.226 x 1.2
  Accuracy_Test_top1: [0, 'has_to_higher'] # 19.342 - 1
example_mobile_v2.benchmark: # Required.
  __benchmark_avg_iter_time(s): [0.135, 'has_to_lower'] # 0.113 x 1.2
  __benchmark_mem_alloc(mb): [4099, 'has_to_lower'] # 3416 x 1.2
  __benchmark_mem_cached(mb): [4240, 'has_to_lower'] # 3534 x 1.2
  __benchmark_pure_training_time(h): [0.267, 'has_to_lower'] # 0.223 x 1.2
  __benchmark_total_time(h): [0.271, 'has_to_lower'] # 0.226 x 1.2
  Accuracy_Test_top1: [18.342, 'has_to_higher'] # 19.342 - 1
example_mobile_v2_mix: # Required.
  __benchmark_avg_iter_time(s): [0.129, 'has_to_lower'] # 0.108 x 1.2
  __benchmark_mem_alloc(mb): [2683, 'has_to_lower'] # 2236 x 1.2
  __benchmark_mem_cached(mb): [2779, 'has_to_lower'] # 2316 x 1.2
  __benchmark_pure_training_time(h): [100000, 'has_to_lower'] # 0.226 x 1.2
  __benchmark_total_time(h): [100000, 'has_to_lower'] # 0.229 x 1.2
  Accuracy_Test_top1: [0, 'has_to_higher'] # 19.872 - 1
example_mobile_v2_mix.benchmark: # Required.
  __benchmark_avg_iter_time(s): [0.129, 'has_to_lower'] # 0.108 x 1.2
  __benchmark_mem_alloc(mb): [2683, 'has_to_lower'] # 2236 x 1.2
  __benchmark_mem_cached(mb): [2779, 'has_to_lower'] # 2316 x 1.2
  __benchmark_pure_training_time(h): [0.271, 'has_to_lower'] # 0.226 x 1.2
  __benchmark_total_time(h): [0.273, 'has_to_lower'] # 0.229 x 1.2
  Accuracy_Test_top1: [18.872, 'has_to_higher'] # 19.872 - 1
example_resnet18: # Required.
  __benchmark_avg_iter_time(s): [0.188, 'has_to_lower'] # 0.157 x 1.2
  __benchmark_mem_alloc(mb): [2342, 'has_to_lower'] # 1952 x 1.2
  __benchmark_mem_cached(mb): [2493, 'has_to_lower'] # 2078 x 1.2
  __benchmark_pure_training_time(h): [100000, 'has_to_lower'] # 0.228 x 1.2
  __benchmark_total_time(h): [100000, 'has_to_lower'] # 0.231 x 1.2
  Accuracy_Test_top1: [0, 'has_to_higher'] # 21.484 - 1
example_resnet18.benchmark: # Required.
  __benchmark_avg_iter_time(s): [0.188, 'has_to_lower'] # 0.157 x 1.2
  __benchmark_mem_alloc(mb): [2342, 'has_to_lower'] # 1952 x 1.2
  __benchmark_mem_cached(mb): [2493, 'has_to_lower'] # 2078 x 1.2
  __benchmark_pure_training_time(h): [0.272, 'has_to_lower'] # 0.228 x 1.2
  __benchmark_total_time(h): [0.277, 'has_to_lower'] # 0.231 x 1.2
  Accuracy_Test_top1: [20.484, 'has_to_higher'] # 21.484 - 1
example_resnet18_mix: # Required.
  __benchmark_avg_iter_time(s): [0.092, 'has_to_lower'] # 0.077 x 1.2
  __benchmark_mem_alloc(mb): [2017, 'has_to_lower'] # 1681 x 1.2
  __benchmark_mem_cached(mb): [2054, 'has_to_lower'] # 1712 x 1.2
  __benchmark_pure_training_time(h): [100000, 'has_to_lower'] # 0.221 x 1.2
  __benchmark_total_time(h): [100000, 'has_to_lower'] # 0.225 x 1.2
  Accuracy_Test_top1: [0, 'has_to_higher'] # 20.586 - 1
example_resnet18_mix.benchmark: # Required.
  __benchmark_avg_iter_time(s): [0.092, 'has_to_lower'] # 0.077 x 1.2
  __benchmark_mem_alloc(mb): [2017, 'has_to_lower'] # 1681 x 1.2
  __benchmark_mem_cached(mb): [2054, 'has_to_lower'] # 1712 x 1.2
  __benchmark_pure_training_time(h): [0.265, 'has_to_lower'] # 0.221 x 1.2
  __benchmark_total_time(h): [0.270, 'has_to_lower'] # 0.225 x 1.2
  Accuracy_Test_top1: [19.586, 'has_to_higher'] # 20.586 - 1
example_resnet101: # Required.
  __benchmark_avg_iter_time(s): [0.252, 'has_to_lower'] # 0.210 x 1.2
  __benchmark_mem_alloc(mb): [7820, 'has_to_lower'] # 6517 x 1.2
  __benchmark_mem_cached(mb): [8157, 'has_to_lower'] # 6798 x 1.2
  __benchmark_pure_training_time(h): [100000, 'has_to_lower'] # 0.304 x 1.2
  __benchmark_total_time(h): [100000, 'has_to_lower'] # 0.307 x 1.2
  Accuracy_Test_top1: [0, 'has_to_higher'] # 20.586 - 1
example_resnet101.benchmark: # Required.
  __benchmark_avg_iter_time(s): [0.252, 'has_to_lower'] # 0.210 x 1.2
  __benchmark_mem_alloc(mb): [7820, 'has_to_lower'] # 6517 x 1.2
  __benchmark_mem_cached(mb): [8157, 'has_to_lower'] # 6798 x 1.2
  __benchmark_pure_training_time(h): [0.365, 'has_to_lower'] # 0.304 x 1.2
  __benchmark_total_time(h): [0.370, 'has_to_lower'] # 0.307 x 1.2
  Accuracy_Test_top1: [19.586, 'has_to_higher'] # 20.586 - 1
example_resnet101_mix: # Required.
  __benchmark_avg_iter_time(s): [0.195, 'has_to_lower'] # 0.163 x 1.2
  __benchmark_mem_alloc(mb): [5647, 'has_to_lower'] # 4706 x 1.2
  __benchmark_mem_cached(mb): [5877, 'has_to_lower'] # 4898 x 1.2
  __benchmark_pure_training_time(h): [100000, 'has_to_lower'] # 0.228 x 1.2
  __benchmark_total_time(h): [100000, 'has_to_lower'] # 0.231 x 1.2
  Accuracy_Test_top1: [0, 'has_to_higher'] # 10.250 - 1
example_resnet101_mix.benchmark: # Required.
  __benchmark_avg_iter_time(s): [0.195, 'has_to_lower'] # 0.163 x 1.2
  __benchmark_mem_alloc(mb): [5647, 'has_to_lower'] # 4706 x 1.2
  __benchmark_mem_cached(mb): [5877, 'has_to_lower'] # 4898 x 1.2
  __benchmark_pure_training_time(h): [0.273, 'has_to_lower'] # 0.228 x 1.2
  __benchmark_total_time(h): [0.276, 'has_to_lower'] # 0.231 x 1.2
  Accuracy_Test_top1: [9.250, 'has_to_higher'] # 10.250 - 1
example_resnet152: # Required.
  __benchmark_avg_iter_time(s): [0.349, 'has_to_lower'] # 0.291 x 1.2
  __benchmark_mem_alloc(mb): [9754, 'has_to_lower'] # 8129 x 1.2
  __benchmark_mem_cached(mb): [10171, 'has_to_lower'] # 8476 x 1.2
  __benchmark_pure_training_time(h): [100000, 'has_to_lower'] # 0.418 x 1.2
  __benchmark_total_time(h): [100000, 'has_to_lower'] # 0.421 x 1.2
  Accuracy_Test_top1: [0, 'has_to_higher'] # 11.976 - 1
example_resnet152.benchmark: # Required.
  __benchmark_avg_iter_time(s): [0.349, 'has_to_lower'] # 0.291 x 1.2
  __benchmark_mem_alloc(mb): [9754, 'has_to_lower'] # 8129 x 1.2
  __benchmark_mem_cached(mb): [10171, 'has_to_lower'] # 8476 x 1.2
  __benchmark_pure_training_time(h): [0.501, 'has_to_lower'] # 0.418 x 1.2
  __benchmark_total_time(h): [0.505, 'has_to_lower'] # 0.421 x 1.2
  Accuracy_Test_top1: [10.976, 'has_to_higher'] # 11.976 - 1
example_resnet152_mix: # Required.
  __benchmark_avg_iter_time(s): [0.211, 'has_to_lower'] # 0.181 + 0.03
  __benchmark_mem_alloc(mb): [6571, 'has_to_lower'] # 5571 + 1000
  __benchmark_mem_cached(mb): [6812, 'has_to_lower'] # 5812 = 1000
  __benchmark_pure_training_time(h): [100000, 'has_to_lower'] # 0.268 + 0.05
  __benchmark_total_time(h): [100000, 'has_to_lower'] # 0.272 + 0.05
  Accuracy_Test_top1: [0, 'has_to_higher'] # 12.198 - 1
example_resnet152_mix.benchmark: # Required.
  __benchmark_avg_iter_time(s): [0.211, 'has_to_lower'] # 0.181 + 0.03
  __benchmark_mem_alloc(mb): [6571, 'has_to_lower'] # 5571 + 1000
  __benchmark_mem_cached(mb): [6812, 'has_to_lower'] # 5812 = 1000
  __benchmark_pure_training_time(h): [0.318, 'has_to_lower'] # 0.268 + 0.05
  __benchmark_total_time(h): [0.322, 'has_to_lower'] # 0.272 + 0.05
  Accuracy_Test_top1: [11.198, 'has_to_higher'] # 12.198 - 1
example_inception_v2: # Required.
  __benchmark_avg_iter_time(s): [100000, 'has_to_lower']
  __benchmark_mem_alloc(mb): [100000, 'has_to_lower']
  __benchmark_mem_cached(mb): [100000, 'has_to_lower']
  __benchmark_pure_training_time(h): [100000, 'has_to_lower']
  __benchmark_total_time(h): [100000, 'has_to_lower']
  Accuracy_Test_top1: [0, 'has_to_higher']
example_inception_v2.benchmark: # Required.
  __benchmark_avg_iter_time(s): [100000, 'has_to_lower']
  __benchmark_mem_alloc(mb): [100000, 'has_to_lower']
  __benchmark_mem_cached(mb): [100000, 'has_to_lower']
  __benchmark_pure_training_time(h): [100000, 'has_to_lower']
  __benchmark_total_time(h): [100000, 'has_to_lower']
  Accuracy_Test_top1: [0, 'has_to_higher']
example_inception_v2_mix: # Required.
  __benchmark_avg_iter_time(s): [100000, 'has_to_lower']
  __benchmark_mem_alloc(mb): [100000, 'has_to_lower']
  __benchmark_mem_cached(mb): [100000, 'has_to_lower']
  __benchmark_pure_training_time(h): [100000, 'has_to_lower']
  __benchmark_total_time(h): [100000, 'has_to_lower']
  Accuracy_Test_top1: [0, 'has_to_higher']
example_inception_v2_mix.benchmark: # Required.
  __benchmark_avg_iter_time(s): [100000, 'has_to_lower']
  __benchmark_mem_alloc(mb): [100000, 'has_to_lower']
  __benchmark_mem_cached(mb): [100000, 'has_to_lower']
  __benchmark_pure_training_time(h): [100000, 'has_to_lower']
  __benchmark_total_time(h): [100000, 'has_to_lower']
  Accuracy_Test_top1: [0, 'has_to_higher']
example_inception_v3: # Required.
  __benchmark_avg_iter_time(s): [0.211, 'has_to_lower'] # 0.181 + 0.03
  __benchmark_mem_alloc(mb): [6571, 'has_to_lower'] # 5571 + 1000
  __benchmark_mem_cached(mb): [6812, 'has_to_lower'] # 5812 = 1000
  __benchmark_pure_training_time(h): [0.318, 'has_to_lower'] # 0.268 + 0.05
  __benchmark_total_time(h): [0.322, 'has_to_lower'] # 0.272 + 0.05
  Accuracy_Test_top1: [11.198, 'has_to_higher'] # 12.198 - 1
example_inception_v3.short: # Required.
  __benchmark_avg_iter_time(s): [100000, 'has_to_lower']
  __benchmark_mem_alloc(mb): [100000, 'has_to_lower']
  __benchmark_mem_cached(mb): [100000, 'has_to_lower']
  __benchmark_pure_training_time(h): [100000, 'has_to_lower']
  __benchmark_total_time(h): [100000, 'has_to_lower']
  Accuracy_Test_top1: [0, 'has_to_higher']
example_inception_v3.benchmark: # Required.
  __benchmark_avg_iter_time(s): [100000, 'has_to_lower']
  __benchmark_mem_alloc(mb): [100000, 'has_to_lower']
  __benchmark_mem_cached(mb): [100000, 'has_to_lower']
  __benchmark_pure_training_time(h): [100000, 'has_to_lower']
  __benchmark_total_time(h): [100000, 'has_to_lower']
  Accuracy_Test_top1: [0, 'has_to_higher']
example_inception_v3_mix: # Required.
  __benchmark_avg_iter_time(s): [100000, 'has_to_lower']
  __benchmark_mem_alloc(mb): [100000, 'has_to_lower']
  __benchmark_mem_cached(mb): [100000, 'has_to_lower']
  __benchmark_pure_training_time(h): [100000, 'has_to_lower']
  __benchmark_total_time(h): [100000, 'has_to_lower']
  Accuracy_Test_top1: [0, 'has_to_higher']
example_inception_v3_mix.benchmark: # Required.
  __benchmark_avg_iter_time(s): [100000, 'has_to_lower']
  __benchmark_mem_alloc(mb): [100000, 'has_to_lower']
  __benchmark_mem_cached(mb): [100000, 'has_to_lower']
  __benchmark_pure_training_time(h): [100000, 'has_to_lower']
  __benchmark_total_time(h): [100000, 'has_to_lower']
  Accuracy_Test_top1: [0, 'has_to_higher']
example_dpn92: # Required.
  __benchmark_avg_iter_time(s): [100000, 'has_to_lower']
  __benchmark_mem_alloc(mb): [100000, 'has_to_lower']
  __benchmark_mem_cached(mb): [100000, 'has_to_lower']
  __benchmark_pure_training_time(h): [100000, 'has_to_lower']
  __benchmark_total_time(h): [100000, 'has_to_lower']
  Accuracy_Test_top1: [0, 'has_to_higher']
example_dpn92.benchmark: # Required.
  __benchmark_avg_iter_time(s): [100000, 'has_to_lower']
  __benchmark_mem_alloc(mb): [100000, 'has_to_lower']
  __benchmark_mem_cached(mb): [100000, 'has_to_lower']
  __benchmark_pure_training_time(h): [100000, 'has_to_lower']
  __benchmark_total_time(h): [100000, 'has_to_lower']
  Accuracy_Test_top1: [0, 'has_to_higher']
example_dpn92_mix: # Required.
  __benchmark_avg_iter_time(s): [100000, 'has_to_lower']
  __benchmark_mem_alloc(mb): [100000, 'has_to_lower']
  __benchmark_mem_cached(mb): [100000, 'has_to_lower']
  __benchmark_pure_training_time(h): [100000, 'has_to_lower']
  __benchmark_total_time(h): [100000, 'has_to_lower']
  Accuracy_Test_top1: [0, 'has_to_higher']
example_dpn92_mix.benchmark: # Required.
  __benchmark_avg_iter_time(s): [100000, 'has_to_lower']
  __benchmark_mem_alloc(mb): [100000, 'has_to_lower']
  __benchmark_mem_cached(mb): [100000, 'has_to_lower']
  __benchmark_pure_training_time(h): [100000, 'has_to_lower']
  __benchmark_total_time(h): [100000, 'has_to_lower']
  Accuracy_Test_top1: [0, 'has_to_higher']
example_inception_resnet: # Required.
  __benchmark_avg_iter_time(s): [100000, 'has_to_lower']
  __benchmark_mem_alloc(mb): [100000, 'has_to_lower']
  __benchmark_mem_cached(mb): [100000, 'has_to_lower']
  __benchmark_pure_training_time(h): [100000, 'has_to_lower']
  __benchmark_total_time(h): [100000, 'has_to_lower']
  Accuracy_Test_top1: [0, 'has_to_higher']
example_inception_resnet.benchmark: # Required.
  __benchmark_avg_iter_time(s): [100000, 'has_to_lower']
  __benchmark_mem_alloc(mb): [100000, 'has_to_lower']
  __benchmark_mem_cached(mb): [100000, 'has_to_lower']
  __benchmark_pure_training_time(h): [100000, 'has_to_lower']
  __benchmark_total_time(h): [100000, 'has_to_lower']
  Accuracy_Test_top1: [0, 'has_to_higher']
example_inception_resnet_mix: # Required.
  __benchmark_avg_iter_time(s): [100000, 'has_to_lower']
  __benchmark_mem_alloc(mb): [100000, 'has_to_lower']
  __benchmark_mem_cached(mb): [100000, 'has_to_lower']
  __benchmark_pure_training_time(h): [100000, 'has_to_lower']
  __benchmark_total_time(h): [100000, 'has_to_lower']
  Accuracy_Test_top1: [0, 'has_to_higher']
example_inception_resnet_mix.benchmark: # Required.
  __benchmark_avg_iter_time(s): [100000, 'has_to_lower']
  __benchmark_mem_alloc(mb): [100000, 'has_to_lower']
  __benchmark_mem_cached(mb): [100000, 'has_to_lower']
  __benchmark_pure_training_time(h): [100000, 'has_to_lower']
  __benchmark_total_time(h): [100000, 'has_to_lower']
  Accuracy_Test_top1: [0, 'has_to_higher']
example_inceptionv3_daily: # Required.
  __benchmark_avg_iter_time(s): [100000, 'has_to_lower']
  __benchmark_mem_alloc(mb): [100000, 'has_to_lower']
  __benchmark_mem_cached(mb): [100000, 'has_to_lower']
  __benchmark_pure_training_time(h): [100000, 'has_to_lower']
  __benchmark_total_time(h): [100000, 'has_to_lower']
  Accuracy_Test_top1: [0, 'has_to_higher']
example_mobile_v1_daily: # Required.
  __benchmark_avg_iter_time(s): [100000, 'has_to_lower']
  __benchmark_mem_alloc(mb): [100000, 'has_to_lower']
  __benchmark_mem_cached(mb): [100000, 'has_to_lower']
  __benchmark_pure_training_time(h): [100000, 'has_to_lower']
  __benchmark_total_time(h): [100000, 'has_to_lower']
  Accuracy_Test_top1: [0, 'has_to_higher']
example_resnet50_daily: # Required.
  __benchmark_avg_iter_time(s): [100000, 'has_to_lower']
  __benchmark_mem_alloc(mb): [100000, 'has_to_lower']
  __benchmark_mem_cached(mb): [100000, 'has_to_lower']
  __benchmark_pure_training_time(h): [100000, 'has_to_lower']
  __benchmark_total_time(h): [100000, 'has_to_lower']
  Accuracy_Test_top1: [0, 'has_to_higher']
example_resnet50_weekly: # Required.
  __benchmark_avg_iter_time(s): [100000, 'has_to_lower']
  __benchmark_mem_alloc(mb): [100000, 'has_to_lower']
  __benchmark_mem_cached(mb): [100000, 'has_to_lower']
  __benchmark_pure_training_time(h): [100000, 'has_to_lower']
  __benchmark_total_time(h): [100000, 'has_to_lower']
  Accuracy_Test_top1: [0, 'has_to_higher']
example_resnet50_mix_weekly: # Required.
  __benchmark_avg_iter_time(s): [100000, 'has_to_lower']
  __benchmark_mem_alloc(mb): [100000, 'has_to_lower']
  __benchmark_mem_cached(mb): [100000, 'has_to_lower']
  __benchmark_pure_training_time(h): [100000, 'has_to_lower']
  __benchmark_total_time(h): [100000, 'has_to_lower']
  Accuracy_Test_top1: [0, 'has_to_higher']
example_se_resnet50_mix_weekly: # Required
  __benchmark_avg_iter_time(s): [100000, 'has_to_lower']
  __benchmark_mem_alloc(mb): [100000, 'has_to_lower']
  __benchmark_mem_cached(mb): [100000, 'has_to_lower']
  __benchmark_pure_training_time(h): [100000, 'has_to_lower']
  __benchmark_total_time(h): [100000, 'has_to_lower']
  Accuracy_Test_top1: [0, 'has_to_higher'].
example_inception_v4_weekly: # Required.
  __benchmark_avg_iter_time(s): [100000, 'has_to_lower']
  __benchmark_mem_alloc(mb): [100000, 'has_to_lower']
  __benchmark_mem_cached(mb): [100000, 'has_to_lower']
  __benchmark_pure_training_time(h): [100000, 'has_to_lower']
  __benchmark_total_time(h): [100000, 'has_to_lower']
  Accuracy_Test_top1: [0, 'has_to_higher']
example_shuffle_v2_weekly: # Required.
  __benchmark_avg_iter_time(s): [100000, 'has_to_lower']
  __benchmark_mem_alloc(mb): [100000, 'has_to_lower']
  __benchmark_mem_cached(mb): [100000, 'has_to_lower']
  __benchmark_pure_training_time(h): [100000, 'has_to_lower']
  __benchmark_total_time(h): [100000, 'has_to_lower']
  Accuracy_Test_top1: [0, 'has_to_higher']
example_mobile_v2_weekly: # Required.
  __benchmark_avg_iter_time(s): [100000, 'has_to_lower']
  __benchmark_mem_alloc(mb): [100000, 'has_to_lower']
  __benchmark_mem_cached(mb): [100000, 'has_to_lower']
  __benchmark_pure_training_time(h): [100000, 'has_to_lower']
  __benchmark_total_time(h): [100000, 'has_to_lower']
  Accuracy_Test_top1: [0, 'has_to_higher']
example_mobile_v1.short: # Required.
  __benchmark_avg_iter_time(s): [100000, 'has_to_lower']
  __benchmark_mem_alloc(mb): [100000, 'has_to_lower']
  __benchmark_mem_cached(mb): [100000, 'has_to_lower']
  __benchmark_pure_training_time(h): [100000, 'has_to_lower']
  __benchmark_total_time(h): [100000, 'has_to_lower']
  Accuracy_Test_top1: [0, 'has_to_higher']
example_mobile_v1.short.dummy_data: # Required.
  __benchmark_avg_iter_time(s): [100000, 'has_to_lower']
  __benchmark_mem_alloc(mb): [100000, 'has_to_lower']
  __benchmark_mem_cached(mb): [100000, 'has_to_lower']
  __benchmark_pure_training_time(h): [100000, 'has_to_lower']
  __benchmark_total_time(h): [100000, 'has_to_lower']
  Accuracy_Test_top1: [0, 'has_to_higher']
example_mobile_v1.benchmark: # Required.
  __benchmark_avg_iter_time(s): [100000, 'has_to_lower']
  __benchmark_mem_alloc(mb): [100000, 'has_to_lower']
  __benchmark_mem_cached(mb): [100000, 'has_to_lower']
  __benchmark_pure_training_time(h): [100000, 'has_to_lower']
  __benchmark_total_time(h): [100000, 'has_to_lower']
  Accuracy_Test_top1: [0, 'has_to_higher']
example_inceptionv3.short: # Required.  __benchmark_avg_iter_time(s): [100000, 'has_to_lower']
  __benchmark_mem_alloc(mb): [100000, 'has_to_lower']
  __benchmark_mem_cached(mb): [100000, 'has_to_lower']
  __benchmark_pure_training_time(h): [100000, 'has_to_lower']
  __benchmark_total_time(h): [100000, 'has_to_lower']
  Accuracy_Test_top1: [0, 'has_to_higher']
example_inceptionv3.short.dummy_data: # Required.  __benchmark_avg_iter_time(s): [100000, 'has_to_lower']
  __benchmark_mem_alloc(mb): [100000, 'has_to_lower']
  __benchmark_mem_cached(mb): [100000, 'has_to_lower']
  __benchmark_pure_training_time(h): [100000, 'has_to_lower']
  __benchmark_total_time(h): [100000, 'has_to_lower']
  Accuracy_Test_top1: [0, 'has_to_higher']
example_vgg16.benchmark: # Required.
  __benchmark_avg_iter_time(s): [100000, 'has_to_lower']
  __benchmark_mem_alloc(mb): [100000, 'has_to_lower']
  __benchmark_mem_cached(mb): [100000, 'has_to_lower']
  __benchmark_pure_training_time(h): [100000, 'has_to_lower']
  __benchmark_total_time(h): [100000, 'has_to_lower']
  Accuracy_Test_top1: [0, 'has_to_higher']
example_shuffle_v1.benchmark: # Required.
  __benchmark_avg_iter_time(s): [100000, 'has_to_lower']
  __benchmark_mem_alloc(mb): [100000, 'has_to_lower']
  __benchmark_mem_cached(mb): [100000, 'has_to_lower']
  __benchmark_pure_training_time(h): [100000, 'has_to_lower']
  __benchmark_total_time(h): [100000, 'has_to_lower']
  Accuracy_Test_top1: [0, 'has_to_higher']
example_resnet18_mix.short.dummy_data:
  __benchmark_avg_iter_time(s): [100000, 'has_to_lower']
  __benchmark_mem_alloc(mb): [100000, 'has_to_lower']
  __benchmark_mem_cached(mb): [100000, 'has_to_lower']
  __benchmark_pure_training_time(h): [100000, 'has_to_lower']
  __benchmark_total_time(h): [100000, 'has_to_lower']
  Accuracy_Test_top1: [0, 'has_to_higher']