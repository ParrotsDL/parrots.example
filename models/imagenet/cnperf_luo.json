{
  "_comment": [
  "This is a config file example for CNPerf."
  ],

  "ipu_perf_events" : ["inst_executed", "inst_cache_miss", "scalar_inst_executed", "alu_cycles",
                       "read_bytes", "write_bytes", "csimd_pre_cycles", "csimd_post_cycles", "lt_cycles",
                       "ctram_io_inst_read_bytes", "ctram_io_inst_write_bytes", "ctram_mv_inst_read_bytes",
                       "ctram_mv_inst_write_bytes", "ltram_multicast_bytes", "ltram_unicast_bytes"],
  "mpu_perf_events" : ["inst_executed", "inst_cache_miss", "scalar_inst_executed", "alu_cycles",
                       "read_bytes", "write_bytes", "cdma0_send_bytes", "cdma0_receive_bytes",
                       "cdma1_send_bytes", "cdma1_receive_bytes"],
  "file_list": [
      {
          "file_name": "exe filter",
          "trace": [
              { "func_name": "^main$" }
          ]
      },

      {
          "file_name": "^libc-.*?\\.so$|^libc\\.so.*?$",

          "trace": [
              { "func_name": "^pwritev64$" },
              { "func_name": "^read$" },
              { "func_name": "^readv$" },
              { "func_name": "^reboot$" },
              { "func_name": "^recv$" },
              { "func_name": "^recvfrom$" },
              { "func_name": "^recvmmsg$" },
              { "func_name": "^recvmsg$" },
              { "func_name": "^sched_yield$" },
              { "func_name": "^select$" },
              { "func_name": "^semctl$" },
              { "func_name": "^semget$" },
              { "func_name": "^semop$" },
              { "func_name": "^semtimedop$" },
              { "func_name": "^send$" },
              { "func_name": "^sendfile$" },
              { "func_name": "^sendfile64$" },
              { "func_name": "^sendmmsg$" },
              { "func_name": "^sendmsg$" },
              { "func_name": "^sendto$" },
              { "func_name": "^shmat$" },
              { "func_name": "^shmctl$" },
              { "func_name": "^shmdt$" },
              { "func_name": "^shmget$" },
              { "func_name": "^shutdown$" },
              { "func_name": "^sigaction$" },
              { "func_name": "^sigsuspend$" },
              { "func_name": "^sigtimedwait$" },
              { "func_name": "^sigwait$" },
              { "func_name": "^sigwaitinfo$" },

              { "func_name": "^socket$" },
              { "func_name": "^socketpair$" },
              { "func_name": "^splice$" },
              { "func_name": "^swapoff$" },
              { "func_name": "^swapon$" },
              { "func_name": "^sync$" },
              { "func_name": "^sync_file_range$" },
              { "func_name": "^syncfs$" },
              { "func_name": "^tee$" },
              { "func_name": "^truncate$" },
              { "func_name": "^umount2$" },
              { "func_name": "^unshare$" },
              { "func_name": "^uselib$" },
              { "func_name": "^vfork$" },
              { "func_name": "^vhangup$" },
              { "func_name": "^vmsplice$" },
              { "func_name": "^wait$" },
              { "func_name": "^wait3$" },
              { "func_name": "^wait4$" },
              { "func_name": "^waitid$" },
              { "func_name": "^waitpid$" },
              { "func_name": "^write$" },
              { "func_name": "^writev$" },

              { "func_name": "^fclose$" },
              { "func_name": "^fcloseall$" },
              { "func_name": "^fflush" },
              { "func_name": "^fflush_unlocked" },
              { "func_name": "^fgetc$" },
              { "func_name": "^fgetc_unlocked$" },
              { "func_name": "^fgets$" },
              { "func_name": "^fgets_unlocked$" },
              { "func_name": "^fgetwc$" },
              { "func_name": "^fgetwc_unlocked$" },
              { "func_name": "^fgetws$" },
              { "func_name": "^fgetws_unlocked$" },

              { "func_name": "^flockfile$" },
              { "func_name": "^fopen$" },
              { "func_name": "^fopen64$" },
              { "func_name": "^fputc$" },
              { "func_name": "^fputc_unlocked$" },
              { "func_name": "^fputs$" },
              { "func_name": "^fputs_unlocked$" },
              { "func_name": "^fputwc$" },
              { "func_name": "^fputwc_unlocked$" },
              { "func_name": "^fputws$" },
              { "func_name": "^fputws_unlocked$" },

              { "func_name": "^fread$" },
              { "func_name": "^fread_unlocked$" },
              { "func_name": "^freopen$" },
              { "func_name": "^freopen64$" },
              { "func_name": "^ftrylockfile$" },
              { "func_name": "^fwrite$" },
              { "func_name": "^fwrite_unlocked" },
              { "func_name": "^getc$" },
              { "func_name": "^_IO_getc$" },
              { "func_name": "^getc_unlocked$" },
              { "func_name": "^getdelim$" },
              { "func_name": "^getline$" },
              { "func_name": "^getw$" },
              { "func_name": "^getwc$" },
              { "func_name": "^getwc_unlocked$" },
              { "func_name": "^lockf$" },
              { "func_name": "^lockf64$" },
              { "func_name": "^mkfifo$" },
              { "func_name": "^mkfifoat$" },
              { "func_name": "^posix_fallocate$" },
              { "func_name": "^posix_fallocate64$" },
              { "func_name": "^putc$" },
              { "func_name": "^_IO_putc$" },
              { "func_name": "^putc_unlocked$" },
              { "func_name": "^putwc$" },
              { "func_name": "^putwc_unlocked$" },
              { "func_name": "^popen$" },
              { "func_name": "^posix_spawn$" },
              { "func_name": "^posix_spawnp$" },
              { "func_name": "^sleep$" },
              { "func_name": "^nanosleep$" },
              { "func_name": "^sysctl$" },
              { "func_name": "^_sysctl$" },
              { "func_name": "^__sysctl$" },
              { "func_name": "^usleep$" }
          ],

          "notrace": null
      },
      {
        "file_name": "^libpthread.*",

        "trace": [
            { "func_name": "^nanosleep$" }
        ],

        "notrace": null
    },
    {
        "file_name": "^librt.*",

        "trace": [
            { "func_name": "^aio_fsync$" },
            { "func_name": "^aio_fsync64$" },
            { "func_name": "^aio_suspend$" },
            { "func_name": "^aio_suspend64$" }
        ],

        "notrace": null
    },

    {
        "file_name": "^libutil.*",

        "trace": [
            { "func_name": "^forkpty$" }
        ],

        "notrace": null
    },

    {
        "file_name": "cambricon apis",

        "trace": null,

        "notrace": [
            { "func_name": "cnrtAddDataStride" },
            { "func_name": "cnrtCopyFunction" },
            { "func_name": "cnrtCreateFunction" },
            { "func_name": "cnrtCreateParamDesc" },
            { "func_name": "cnrtCreateParamDescArray" },
            { "func_name": "cnrtCreateRuntimeContext" },
            { "func_name": "cnrtDestroyFunction" },
            { "func_name": "cnrtDestroyInputAndOutputNames" },
            { "func_name": "cnrtDestroyParamDesc" },
            { "func_name": "cnrtDestroyParamDescArray" },
            { "func_name": "cnrtDestroyRuntimeContext" },
            { "func_name": "cnrtExtractFunction" },
            { "func_name": "cnrtForkRuntimeContext" },
            { "func_name": "cnrtGetDataTypeFromParamDesc" },
            { "func_name": "cnrtGetDimOrderFromParamDesc" },
            { "func_name": "cnrtGetFunctionMemUsed" },
            { "func_name": "cnrtGetFunctionNumber" },
            { "func_name": "cnrtGetFunctionSymbol" },
            { "func_name": "cnrtGetIndexFromParamDescArrayByName" },
            { "func_name": "cnrtGetInputAndOutputNamesFromFunction" },
            { "func_name": "cnrtGetInputDataShape" },
            { "func_name": "cnrtGetInputDataSize" },
            { "func_name": "cnrtGetInputDataType" },
            { "func_name": "cnrtGetModelLevelFromFile" },
            { "func_name": "cnrtGetModelMemUsed" },
            { "func_name": "cnrtGetModelSize" },
            { "func_name": "cnrtGetNameFromParamDesc" },
            { "func_name": "cnrtGetOutputDataShape" },
            { "func_name": "cnrtGetOutputDataSize" },
            { "func_name": "cnrtGetOutputDataType" },
            { "func_name": "cnrtGetParamDescSize" },
            { "func_name": "cnrtGetParamElementNum" },
            { "func_name": "cnrtGetParamIndexByName" },
            { "func_name": "cnrtGetRuntimeContextInfo" },
            { "func_name": "cnrtGetShapeFromParamDesc" },
            { "func_name": "cnrtGetSupportedParamDataTypeByName" },
            { "func_name": "cnrtGetSupportedParamDimNumberByName" },
            { "func_name": "cnrtGetSupportedParamLayoutByName" },
            { "func_name": "cnrtGetSupportedParamShapeByName" },
            { "func_name": "cnrtInferFunctionOutputShape" },
            { "func_name": "cnrtInitRuntimeContext" },
            { "func_name": "cnrtInvokeRuntimeContext" },
            { "func_name": "cnrtLoadModel" },
            { "func_name": "cnrtLoadModelFromMem" },
            { "func_name": "cnrtLoadModelFromMem_V2" },
            { "func_name": "cnrtQueryBatches" },
            { "func_name": "cnrtQueryCacheMode" },
            { "func_name": "cnrtQueryCoreVersion" },
            { "func_name": "cnrtQueryModelJobType" },
            { "func_name": "cnrtQueryModelLocalMemSize" },
            { "func_name": "cnrtQueryModelParallelism" },
            { "func_name": "cnrtQueryModelStackSize" },
            { "func_name": "cnrtRuntimeContextCreateNotifier" },
            { "func_name": "cnrtRuntimeContextCreateQueue" },
            { "func_name": "cnrtSetDataTypeToParamDesc" },
            { "func_name": "cnrtSetNameToParamDesc" },
            { "func_name": "cnrtSetRuntimeContextChannel" },
            { "func_name": "cnrtSetRuntimeContextDeviceId" },
            { "func_name": "cnrtSetShapeToParamDesc" },
            { "func_name": "cnrtTransDataColorOrder" },
            { "func_name": "cnrtTransOrderAndCast" },
            { "func_name": "cnrtUnloadModel" },
            { "func_name": "cnrtAddParam" },
            { "func_name": "cnrtAllocParam" },
            { "func_name": "cnrtCacheOperation" },
            { "func_name": "cnrtCacheOperationRange" },
            { "func_name": "cnrtClearCurrentThreadAffinity" },
            { "func_name": "cnrtCopyKernelParamsBuffer" },
            { "func_name": "cnrtCreateKernelInitParam" },
            { "func_name": "cnrtCreateNotifier" },
            { "func_name": "cnrtCreateQueue" },
            { "func_name": "cnrtDestroyKernelInitParamAndMemory" },
            { "func_name": "cnrtDestroyKernelParamsBuffer" },
            { "func_name": "cnrtDestroyNotifier" },
            { "func_name": "cnrtDestroyParam" },
            { "func_name": "cnrtDestroyQueue" },
            { "func_name": "cnrtFindDevAddrByMappedAddr" },
            { "func_name": "cnrtFindDevAddrWithOffsetByMappedAddr" },
            { "func_name": "cnrtGetCurrentChannel" },
            { "func_name": "cnrtGetCurrentDevice" },
            { "func_name": "cnrtGetCurrentOrdinal" },
            { "func_name": "cnrtGetDeviceAffinity" },
            { "func_name": "cnrtGetDeviceHandle" },
            { "func_name": "cnrtGetDeviceInfo" },
            { "func_name": "cnrtGetKernelParamsBuffer" },
            { "func_name": "cnrtGetLastErr" },
            { "func_name": "cnrtGetMemInfo" },
            { "func_name": "cnrtGetMemorySize" },
            { "func_name": "cnrtGetMLUdev" },
            { "func_name": "cnrtGetMLUdevHandle" },
            { "func_name": "cnrtGetParam" },
            { "func_name": "cnrtGetStackMem" },
            { "func_name": "cnrtGetVersion" },
            { "func_name": "cnrtInit" },
            { "func_name": "cnrtInitKernelMemory" },
            { "func_name": "cnrtInvokeKernel_V2" },
            { "func_name": "cnrtInvokeKernel_V3" },
            { "func_name": "cnrtKernelParamsBufferAddParam" },
            { "func_name": "cnrtKernelParamsBufferMarkInput" },
            { "func_name": "cnrtKernelParamsBufferMarkOutput" },
            { "func_name": "cnrtKernelParamsBufferMarkStatic" },
            { "func_name": "cnrtReshapeNCHWToNHWC" },
            { "func_name": "cnrtReshapeNHWCToNCHW" },
            { "func_name": "cnrtTransDataOrder" },
            { "func_name": "cnrtCastDataType" },
            { "func_name": "cnrtDeviceGetLimit" },
            { "func_name": "cnrtDeviceGetP2PAttribute" },
            { "func_name": "cnrtDeviceGetQueuePriorityRange" },
            { "func_name": "cnrtFilterReshape" },
            { "func_name": "cnrtGetLocalMem" },
            { "func_name": "cnrtGetParamDescFromParamDescArrayByName" },
            { "func_name": "cnnlCreateTensorDescriptor" },
            { "func_name": "cnnlSetTensorDescriptor" },
            { "func_name": "cnnlSetTensorDescriptorEx" },
            { "func_name": "cnnlSetTensorDescriptorPosition" },
            { "func_name": "cnnlSetTensorDescriptorPositionAndScale" },
            { "func_name": "cnnlSetTensorDescriptorPositionScaleAndOffset" },
            { "func_name": "cnnlGetTensorDescriptor" },
            { "func_name": "cnnlGetTensorDescriptorEx" },
            { "func_name": "cnnlGetTensorDescriptorPosition" },
            { "func_name": "cnnlGetTensorDescriptorPositionAndScale" },
            { "func_name": "cnnlGetTensorDescriptorPositionScaleAndOffset" },
            { "func_name": "cnnlDestroyTensorDescriptor" },
            { "func_name": "cnCtxGetFlags" },
            { "func_name": "cnCtxGetApiVersion" },
            { "func_name": "cnCtxGetCurrent" },
            { "func_name": "cnCtxSetCurrent" },
            { "func_name": "cnCtxGetDevice" },
            { "func_name": "cnCtxGetQueuePriorityRange" },
            { "func_name": "cnCtxGetConfig" },
            { "func_name": "cnCtxSetConfig" },
            { "func_name": "cnMemGetInfo" },
            { "func_name": "cnMemGetNodeInfo" },
            { "func_name": "cnSharedContextGetState" },
            { "func_name": "cnSharedContextSetFlags" },
            { "func_name": "cnDeviceGetCount" },
            { "func_name": "cnDeviceGet" },
            { "func_name": "cnDeviceGetName" },
            { "func_name": "cnDriverGetVersion" },
            { "func_name": "cnGetLibVersion" },
            { "func_name": "cnGetDriverVersion" },
            { "func_name": "cnGetErrorName" },
            { "func_name": "cnGetErrorString" },
            { "func_name": "cnDeviceTotalMem" },
            { "func_name": "cnDeviceCanPeerAble" },
            { "func_name": "cnGetMemAttribute" },
            { "func_name": "cnGetMemAttributes" },
            { "func_name": "cnQueueGetContext" },
            { "func_name": "cnDeviceGetByPCIBusId" },
            { "func_name": "cnDeviceGetPCIBusId" },
            { "func_name": "cnSetCtxConfigParam_pt" },
            { "func_name": "cnGetCtxConfigParam_pt" },
            { "func_name": "cnrtConvertDoubleToHalf" },
            { "func_name": "cnrtConvertFloatToHalf" },
            { "func_name": "cnrtConvertHalfToDouble" },
            { "func_name": "cnrtGetDeviceCount" },
            { "func_name": "cnrtGetDevice" },
            { "func_name": "cnrtSetDevice" },
            { "func_name": "cnrtSetCurrentDevice" },
            { "func_name": "cnrtCnpapiInternalReserved1" },
            { "func_name": "cnrtCnpapiInternalReserved0" },
            { "func_name": "cnnlSetQueue" },
            { "func_name": "cnnlSetTensorDescriptorOnchipDataType" },
            { "func_name": "cnnlGetOpTensorWorkspaceSize" },
            { "func_name": "cnnlSetOpTensorDescriptor" },
            { "func_name": "cnnlDestroyOpTensorDescriptor" },
            { "func_name": "cnnlCreateOpTensorDescriptor" },
            { "func_name": "cnrtConvertHalfToFloat" }
        ]
    }
  ]
}
