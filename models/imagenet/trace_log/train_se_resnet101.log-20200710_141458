--------------------------------------------------------------------------
No OpenFabrics connection schemes reported that they were able to be
used on a specific port.  As such, the openib BTL (OpenFabrics
support) will be disabled for this port.

  Local host:           SH-IDC1-10-198-4-45
  Local device:         mlx5_0
  Local port:           1
  CPCs attempted:       rdmacm, udcm
--------------------------------------------------------------------------
--------------------------------------------------------------------------
No OpenFabrics connection schemes reported that they were able to be
used on a specific port.  As such, the openib BTL (OpenFabrics
support) will be disabled for this port.

  Local host:           SH-IDC1-10-198-4-45
  Local device:         mlx5_0
  Local port:           1
  CPCs attempted:       rdmacm, udcm
--------------------------------------------------------------------------
--------------------------------------------------------------------------
No OpenFabrics connection schemes reported that they were able to be
used on a specific port.  As such, the openib BTL (OpenFabrics
support) will be disabled for this port.

  Local host:           SH-IDC1-10-198-4-45
  Local device:         mlx5_0
  Local port:           1
  CPCs attempted:       rdmacm, udcm
--------------------------------------------------------------------------
--------------------------------------------------------------------------
No OpenFabrics connection schemes reported that they were able to be
used on a specific port.  As such, the openib BTL (OpenFabrics
support) will be disabled for this port.

  Local host:           SH-IDC1-10-198-4-45
  Local device:         mlx5_0
  Local port:           1
  CPCs attempted:       rdmacm, udcm
--------------------------------------------------------------------------
--------------------------------------------------------------------------
No OpenFabrics connection schemes reported that they were able to be
used on a specific port.  As such, the openib BTL (OpenFabrics
support) will be disabled for this port.

  Local host:           SH-IDC1-10-198-4-45
  Local device:         mlx5_0
  Local port:           1
  CPCs attempted:       rdmacm, udcm
--------------------------------------------------------------------------
--------------------------------------------------------------------------
No OpenFabrics connection schemes reported that they were able to be
used on a specific port.  As such, the openib BTL (OpenFabrics
support) will be disabled for this port.

  Local host:           SH-IDC1-10-198-4-45
  Local device:         mlx5_0
  Local port:           1
  CPCs attempted:       rdmacm, udcm
--------------------------------------------------------------------------
--------------------------------------------------------------------------
No OpenFabrics connection schemes reported that they were able to be
used on a specific port.  As such, the openib BTL (OpenFabrics
support) will be disabled for this port.

  Local host:           SH-IDC1-10-198-4-45
  Local device:         mlx5_0
  Local port:           1
  CPCs attempted:       rdmacm, udcm
--------------------------------------------------------------------------
--------------------------------------------------------------------------
No OpenFabrics connection schemes reported that they were able to be
used on a specific port.  As such, the openib BTL (OpenFabrics
support) will be disabled for this port.

  Local host:           SH-IDC1-10-198-4-45
  Local device:         mlx5_0
  Local port:           1
  CPCs attempted:       rdmacm, udcm
--------------------------------------------------------------------------
2020-07-10 14:15:05,327 [32mINFO[0m: Parrots 0.6.0 | Git hash: d7b26529 | Compute hash: 2c662d99[0m
2020-07-10 14:15:05,327 [32mINFO[0m: Parrots 0.6.0 | Git hash: d7b26529 | Compute hash: 2c662d99[0m
2020-07-10 14:15:05,327 [32mINFO[0m: Parrots 0.6.0 | Git hash: d7b26529 | Compute hash: 2c662d99[0m
2020-07-10 14:15:05,327 [32mINFO[0m: Parrots 0.6.0 | Git hash: d7b26529 | Compute hash: 2c662d99[0m
2020-07-10 14:15:05,327 [32mINFO[0m: Parrots 0.6.0 | Git hash: d7b26529 | Compute hash: 2c662d99[0m
2020-07-10 14:15:05,327 [32mINFO[0m: Parrots 0.6.0 | Git hash: d7b26529 | Compute hash: 2c662d99[0m
2020-07-10 14:15:05,327 [32mINFO[0m: Parrots 0.6.0 | Git hash: d7b26529 | Compute hash: 2c662d99[0m
2020-07-10 14:15:05,327 [32mINFO[0m: Parrots 0.6.0 | Git hash: d7b26529 | Compute hash: 2c662d99[0m
2020-07-10 14:15:07,018 [32mINFO[0m: rank 3 of 8 jobs, in SH-IDC1-10-198-4-45[0m
2020-07-10 14:15:07,018 [32mINFO[0m: rank 4 of 8 jobs, in SH-IDC1-10-198-4-45[0m
2020-07-10 14:15:07,018 [32mINFO[0m: rank 7 of 8 jobs, in SH-IDC1-10-198-4-45[0m
2020-07-10 14:15:07,018 [32mINFO[0m: rank 5 of 8 jobs, in SH-IDC1-10-198-4-45[0m
2020-07-10 14:15:07,018 [32mINFO[0m: rank 1 of 8 jobs, in SH-IDC1-10-198-4-45[0m
2020-07-10 14:15:07,018 [32mINFO[0m: rank 2 of 8 jobs, in SH-IDC1-10-198-4-45[0m
2020-07-10 14:15:07,018 [32mINFO[0m: rank 0 of 8 jobs, in SH-IDC1-10-198-4-45[0m
2020-07-10 14:15:07,019 [32mINFO[0m: rank 6 of 8 jobs, in SH-IDC1-10-198-4-45[0m
2020-07-10 14:15:09,402 [32mINFO[0m: config
{
  "seed": 99,
  "net": {
    "arch": "se_resnet101",
    "kwargs": {
      "num_classes": 1000
    }
  },
  "dataset": {
    "train": {
      "meta_file": "/mnt/lustre/share/images/meta/train.txt",
      "image_dir": "/mnt/lustre/share/images/train",
      "random_resize_crop": 224,
      "colorjitter": [
        0.2,
        0.2,
        0.2,
        0.1
      ],
      "mean": [
        0.485,
        0.456,
        0.406
      ],
      "std": [
        0.229,
        0.224,
        0.225
      ],
      "mirror": true
    },
    "test": {
      "meta_file": "/mnt/lustre/share/images/meta/val.txt",
      "image_dir": "/mnt/lustre/share/images/val",
      "resize": 256,
      "center_crop": [
        224,
        224
      ],
      "random_resize_crop": null,
      "mean": [
        0.485,
        0.456,
        0.406
      ],
      "std": [
        0.229,
        0.224,
        0.225
      ],
      "mirror": false
    },
    "batch_size": 32,
    "workers": 4
  },
  "trainer": {
    "max_epoch": 1,
    "test_freq": 1,
    "log_freq": 20,
    "bn": {
      "syncbn": false
    },
    "mixed_precision": {
      "half": false,
      "loss_scale": 128.0,
      "float_bn": true
    },
    "optimizer": {
      "type": "SGD",
      "kwargs": {
        "lr": 0.1,
        "momentum": 0.9,
        "weight_decay": 0.0001
      }
    },
    "lr_scheduler": {
      "warmup_epochs": 0,
      "type": "MultiStepLR",
      "kwargs": {
        "milestones": [
          30,
          60,
          90
        ],
        "gamma": 0.1
      }
    }
  },
  "saver": {
    "pretrian_model": null,
    "resume_model": null,
    "save_dir": "checkpoints/se_resnet50"
  }
}[0m
2020-07-10 14:15:09,459 [32mINFO[0m: creating model 'se_resnet101'[0m
2020-07-10 14:15:09,872 [32mINFO[0m: model
DistributedParrotsModel
SENet(
  (layer0): Sequential(
    (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
    (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu1): ReLU(inplace)
    (pool): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=True)
  )
  (layer1): Sequential(
    (0): SEResNetBottleneck(
      (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (se_module): SEModule(
        (avg_pool): AdaptiveAvgPool2d()
        (fc1): Conv2d(256, 16, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace)
        (fc2): Conv2d(16, 256, kernel_size=(1, 1), stride=(1, 1))
        (sigmoid): Sigmoid()
      )
      (downsample): Sequential(
        (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): SEResNetBottleneck(
      (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (se_module): SEModule(
        (avg_pool): AdaptiveAvgPool2d()
        (fc1): Conv2d(256, 16, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace)
        (fc2): Conv2d(16, 256, kernel_size=(1, 1), stride=(1, 1))
        (sigmoid): Sigmoid()
      )
    )
    (2): SEResNetBottleneck(
      (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (se_module): SEModule(
        (avg_pool): AdaptiveAvgPool2d()
        (fc1): Conv2d(256, 16, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace)
        (fc2): Conv2d(16, 256, kernel_size=(1, 1), stride=(1, 1))
        (sigmoid): Sigmoid()
      )
    )
  )
  (layer2): Sequential(
    (0): SEResNetBottleneck(
      (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (se_module): SEModule(
        (avg_pool): AdaptiveAvgPool2d()
        (fc1): Conv2d(512, 32, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace)
        (fc2): Conv2d(32, 512, kernel_size=(1, 1), stride=(1, 1))
        (sigmoid): Sigmoid()
      )
      (downsample): Sequential(
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): SEResNetBottleneck(
      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (se_module): SEModule(
        (avg_pool): AdaptiveAvgPool2d()
        (fc1): Conv2d(512, 32, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace)
        (fc2): Conv2d(32, 512, kernel_size=(1, 1), stride=(1, 1))
        (sigmoid): Sigmoid()
      )
    )
    (2): SEResNetBottleneck(
      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (se_module): SEModule(
        (avg_pool): AdaptiveAvgPool2d()
        (fc1): Conv2d(512, 32, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace)
        (fc2): Conv2d(32, 512, kernel_size=(1, 1), stride=(1, 1))
        (sigmoid): Sigmoid()
      )
    )
    (3): SEResNetBottleneck(
      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (se_module): SEModule(
        (avg_pool): AdaptiveAvgPool2d()
        (fc1): Conv2d(512, 32, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace)
        (fc2): Conv2d(32, 512, kernel_size=(1, 1), stride=(1, 1))
        (sigmoid): Sigmoid()
      )
    )
  )
  (layer3): Sequential(
    (0): SEResNetBottleneck(
      (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (se_module): SEModule(
        (avg_pool): AdaptiveAvgPool2d()
        (fc1): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace)
        (fc2): Conv2d(64, 1024, kernel_size=(1, 1), stride=(1, 1))
        (sigmoid): Sigmoid()
      )
      (downsample): Sequential(
        (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): SEResNetBottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (se_module): SEModule(
        (avg_pool): AdaptiveAvgPool2d()
        (fc1): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace)
        (fc2): Conv2d(64, 1024, kernel_size=(1, 1), stride=(1, 1))
        (sigmoid): Sigmoid()
      )
    )
    (2): SEResNetBottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (se_module): SEModule(
        (avg_pool): AdaptiveAvgPool2d()
        (fc1): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace)
        (fc2): Conv2d(64, 1024, kernel_size=(1, 1), stride=(1, 1))
        (sigmoid): Sigmoid()
      )
    )
    (3): SEResNetBottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (se_module): SEModule(
        (avg_pool): AdaptiveAvgPool2d()
        (fc1): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace)
        (fc2): Conv2d(64, 1024, kernel_size=(1, 1), stride=(1, 1))
        (sigmoid): Sigmoid()
      )
    )
    (4): SEResNetBottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (se_module): SEModule(
        (avg_pool): AdaptiveAvgPool2d()
        (fc1): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace)
        (fc2): Conv2d(64, 1024, kernel_size=(1, 1), stride=(1, 1))
        (sigmoid): Sigmoid()
      )
    )
    (5): SEResNetBottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (se_module): SEModule(
        (avg_pool): AdaptiveAvgPool2d()
        (fc1): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace)
        (fc2): Conv2d(64, 1024, kernel_size=(1, 1), stride=(1, 1))
        (sigmoid): Sigmoid()
      )
    )
    (6): SEResNetBottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (se_module): SEModule(
        (avg_pool): AdaptiveAvgPool2d()
        (fc1): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace)
        (fc2): Conv2d(64, 1024, kernel_size=(1, 1), stride=(1, 1))
        (sigmoid): Sigmoid()
      )
    )
    (7): SEResNetBottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (se_module): SEModule(
        (avg_pool): AdaptiveAvgPool2d()
        (fc1): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace)
        (fc2): Conv2d(64, 1024, kernel_size=(1, 1), stride=(1, 1))
        (sigmoid): Sigmoid()
      )
    )
    (8): SEResNetBottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (se_module): SEModule(
        (avg_pool): AdaptiveAvgPool2d()
        (fc1): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace)
        (fc2): Conv2d(64, 1024, kernel_size=(1, 1), stride=(1, 1))
        (sigmoid): Sigmoid()
      )
    )
    (9): SEResNetBottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (se_module): SEModule(
        (avg_pool): AdaptiveAvgPool2d()
        (fc1): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace)
        (fc2): Conv2d(64, 1024, kernel_size=(1, 1), stride=(1, 1))
        (sigmoid): Sigmoid()
      )
    )
    (10): SEResNetBottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (se_module): SEModule(
        (avg_pool): AdaptiveAvgPool2d()
        (fc1): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace)
        (fc2): Conv2d(64, 1024, kernel_size=(1, 1), stride=(1, 1))
        (sigmoid): Sigmoid()
      )
    )
    (11): SEResNetBottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (se_module): SEModule(
        (avg_pool): AdaptiveAvgPool2d()
        (fc1): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace)
        (fc2): Conv2d(64, 1024, kernel_size=(1, 1), stride=(1, 1))
        (sigmoid): Sigmoid()
      )
    )
    (12): SEResNetBottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (se_module): SEModule(
        (avg_pool): AdaptiveAvgPool2d()
        (fc1): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace)
        (fc2): Conv2d(64, 1024, kernel_size=(1, 1), stride=(1, 1))
        (sigmoid): Sigmoid()
      )
    )
    (13): SEResNetBottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (se_module): SEModule(
        (avg_pool): AdaptiveAvgPool2d()
        (fc1): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace)
        (fc2): Conv2d(64, 1024, kernel_size=(1, 1), stride=(1, 1))
        (sigmoid): Sigmoid()
      )
    )
    (14): SEResNetBottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (se_module): SEModule(
        (avg_pool): AdaptiveAvgPool2d()
        (fc1): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace)
        (fc2): Conv2d(64, 1024, kernel_size=(1, 1), stride=(1, 1))
        (sigmoid): Sigmoid()
      )
    )
    (15): SEResNetBottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (se_module): SEModule(
        (avg_pool): AdaptiveAvgPool2d()
        (fc1): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace)
        (fc2): Conv2d(64, 1024, kernel_size=(1, 1), stride=(1, 1))
        (sigmoid): Sigmoid()
      )
    )
    (16): SEResNetBottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (se_module): SEModule(
        (avg_pool): AdaptiveAvgPool2d()
        (fc1): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace)
        (fc2): Conv2d(64, 1024, kernel_size=(1, 1), stride=(1, 1))
        (sigmoid): Sigmoid()
      )
    )
    (17): SEResNetBottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (se_module): SEModule(
        (avg_pool): AdaptiveAvgPool2d()
        (fc1): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace)
        (fc2): Conv2d(64, 1024, kernel_size=(1, 1), stride=(1, 1))
        (sigmoid): Sigmoid()
      )
    )
    (18): SEResNetBottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (se_module): SEModule(
        (avg_pool): AdaptiveAvgPool2d()
        (fc1): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace)
        (fc2): Conv2d(64, 1024, kernel_size=(1, 1), stride=(1, 1))
        (sigmoid): Sigmoid()
      )
    )
    (19): SEResNetBottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (se_module): SEModule(
        (avg_pool): AdaptiveAvgPool2d()
        (fc1): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace)
        (fc2): Conv2d(64, 1024, kernel_size=(1, 1), stride=(1, 1))
        (sigmoid): Sigmoid()
      )
    )
    (20): SEResNetBottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (se_module): SEModule(
        (avg_pool): AdaptiveAvgPool2d()
        (fc1): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace)
        (fc2): Conv2d(64, 1024, kernel_size=(1, 1), stride=(1, 1))
        (sigmoid): Sigmoid()
      )
    )
    (21): SEResNetBottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (se_module): SEModule(
        (avg_pool): AdaptiveAvgPool2d()
        (fc1): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace)
        (fc2): Conv2d(64, 1024, kernel_size=(1, 1), stride=(1, 1))
        (sigmoid): Sigmoid()
      )
    )
    (22): SEResNetBottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (se_module): SEModule(
        (avg_pool): AdaptiveAvgPool2d()
        (fc1): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace)
        (fc2): Conv2d(64, 1024, kernel_size=(1, 1), stride=(1, 1))
        (sigmoid): Sigmoid()
      )
    )
  )
  (layer4): Sequential(
    (0): SEResNetBottleneck(
      (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (se_module): SEModule(
        (avg_pool): AdaptiveAvgPool2d()
        (fc1): Conv2d(2048, 128, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace)
        (fc2): Conv2d(128, 2048, kernel_size=(1, 1), stride=(1, 1))
        (sigmoid): Sigmoid()
      )
      (downsample): Sequential(
        (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): SEResNetBottleneck(
      (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (se_module): SEModule(
        (avg_pool): AdaptiveAvgPool2d()
        (fc1): Conv2d(2048, 128, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace)
        (fc2): Conv2d(128, 2048, kernel_size=(1, 1), stride=(1, 1))
        (sigmoid): Sigmoid()
      )
    )
    (2): SEResNetBottleneck(
      (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (se_module): SEModule(
        (avg_pool): AdaptiveAvgPool2d()
        (fc1): Conv2d(2048, 128, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace)
        (fc2): Conv2d(128, 2048, kernel_size=(1, 1), stride=(1, 1))
        (sigmoid): Sigmoid()
      )
    )
  )
  (avg_pool): AvgPool2d(kernel_size=7, stride=1, padding=0)
  (last_linear): Linear(in_features=2048, out_features=1000, bias=True)
)[0m
2020-07-10 14:15:09,873 [32mINFO[0m: loss
CrossEntropyLoss()[0m
2020-07-10 14:15:09,874 [32mINFO[0m: optimizer
SGD (
Parameter Group 0
    dampening: 0
    hold_grads: False
    lr: 0.1
    momentum: 0.9
    nesterov: False
    weight_decay: 0.0001
)[0m
2020-07-10 14:15:11,524 [32mINFO[0m: ==> begin trace[0m
2020-07-10 14:15:19,966 [32mINFO[0m: ==> tr_data dumped[0m
2020-07-10 14:15:20,428 [32mINFO[0m: => trace and tr_func saved[0m
2020-07-10 14:15:29,004 [32mINFO[0m: Epoch: [1/1][   0/5005] Time 8.573 (8.573) Data 5.008 (5.008) Loss 6.9251 (6.9251) Acc@1 0.00 (0.00) Acc@5 0.39 (0.39) Memory(MB) 6055[0m
2020-07-10 14:15:33,517 [32mINFO[0m: Epoch: [1/1][  20/5005] Time 0.218 (0.623) Data 0.000 (0.242) Loss 7.0049 (6.9955) Acc@1 0.00 (0.15) Acc@5 0.78 (0.50) Memory(MB) 6055[0m
2020-07-10 14:15:37,980 [32mINFO[0m: Epoch: [1/1][  40/5005] Time 0.218 (0.428) Data 0.000 (0.125) Loss 6.9445 (6.9817) Acc@1 0.39 (0.12) Acc@5 0.78 (0.59) Memory(MB) 6055[0m
2020-07-10 14:15:42,415 [32mINFO[0m: Epoch: [1/1][  60/5005] Time 0.219 (0.360) Data 0.000 (0.085) Loss 6.8954 (6.9521) Acc@1 0.78 (0.18) Acc@5 1.56 (0.75) Memory(MB) 6055[0m
2020-07-10 14:15:47,069 [32mINFO[0m: Epoch: [1/1][  80/5005] Time 0.221 (0.329) Data 0.002 (0.065) Loss 6.8176 (6.8931) Acc@1 0.00 (0.26) Acc@5 1.17 (1.05) Memory(MB) 6055[0m
2020-07-10 14:15:51,456 [32mINFO[0m: Epoch: [1/1][ 100/5005] Time 0.219 (0.307) Data 0.002 (0.052) Loss 6.8699 (6.8586) Acc@1 0.39 (0.30) Acc@5 1.17 (1.34) Memory(MB) 6055[0m
2020-07-10 14:15:55,965 [32mINFO[0m: Epoch: [1/1][ 120/5005] Time 0.222 (0.294) Data 0.002 (0.044) Loss 6.7710 (6.8242) Acc@1 0.00 (0.29) Acc@5 0.78 (1.51) Memory(MB) 6055[0m
2020-07-10 14:16:00,371 [32mINFO[0m: Epoch: [1/1][ 140/5005] Time 0.219 (0.283) Data 0.004 (0.038) Loss 6.7587 (6.7897) Acc@1 0.00 (0.35) Acc@5 0.00 (1.72) Memory(MB) 6055[0m
2020-07-10 14:16:04,767 [32mINFO[0m: Epoch: [1/1][ 160/5005] Time 0.223 (0.275) Data 0.001 (0.034) Loss 6.7653 (6.7686) Acc@1 0.78 (0.34) Acc@5 2.34 (1.69) Memory(MB) 6055[0m
2020-07-10 14:16:09,641 [32mINFO[0m: Epoch: [1/1][ 180/5005] Time 0.219 (0.272) Data 0.001 (0.030) Loss 6.7384 (6.7485) Acc@1 0.00 (0.38) Acc@5 1.56 (1.69) Memory(MB) 6055[0m
2020-07-10 14:16:14,047 [32mINFO[0m: Epoch: [1/1][ 200/5005] Time 0.220 (0.225) Data 0.001 (0.002) Loss 6.6547 (6.7235) Acc@1 0.00 (0.38) Acc@5 2.73 (1.83) Memory(MB) 6055[0m
2020-07-10 14:16:18,621 [32mINFO[0m: Epoch: [1/1][ 220/5005] Time 0.219 (0.225) Data 0.001 (0.002) Loss 6.7164 (6.7111) Acc@1 0.39 (0.42) Acc@5 1.17 (1.97) Memory(MB) 6055[0m
2020-07-10 14:16:23,054 [32mINFO[0m: Epoch: [1/1][ 240/5005] Time 0.225 (0.225) Data 0.001 (0.002) Loss 6.6702 (6.6841) Acc@1 0.78 (0.45) Acc@5 0.78 (2.16) Memory(MB) 6055[0m
2020-07-10 14:16:27,867 [32mINFO[0m: Epoch: [1/1][ 260/5005] Time 0.218 (0.227) Data 0.001 (0.002) Loss 6.6427 (6.6611) Acc@1 0.39 (0.52) Acc@5 1.95 (2.39) Memory(MB) 6055[0m
2020-07-10 14:16:32,285 [32mINFO[0m: Epoch: [1/1][ 280/5005] Time 0.222 (0.226) Data 0.001 (0.002) Loss 6.6269 (6.6372) Acc@1 0.78 (0.58) Acc@5 1.95 (2.55) Memory(MB) 6055[0m
2020-07-10 14:16:36,789 [32mINFO[0m: Epoch: [1/1][ 300/5005] Time 0.217 (0.226) Data 0.001 (0.002) Loss 6.6103 (6.6162) Acc@1 0.39 (0.61) Acc@5 2.34 (2.62) Memory(MB) 6055[0m
2020-07-10 14:16:41,216 [32mINFO[0m: Epoch: [1/1][ 320/5005] Time 0.221 (0.226) Data 0.001 (0.002) Loss 6.5150 (6.6090) Acc@1 0.39 (0.59) Acc@5 3.12 (2.30) Memory(MB) 6055[0m
2020-07-10 14:16:46,130 [32mINFO[0m: Epoch: [1/1][ 340/5005] Time 0.714 (0.228) Data 0.001 (0.002) Loss 6.5318 (6.5966) Acc@1 0.39 (0.53) Acc@5 2.73 (2.27) Memory(MB) 6055[0m
2020-07-10 14:16:50,552 [32mINFO[0m: Epoch: [1/1][ 360/5005] Time 0.223 (0.228) Data 0.001 (0.002) Loss 6.5551 (6.5599) Acc@1 0.00 (0.62) Acc@5 1.56 (2.70) Memory(MB) 6055[0m
2020-07-10 14:16:55,001 [32mINFO[0m: Epoch: [1/1][ 380/5005] Time 0.220 (0.226) Data 0.002 (0.002) Loss 6.6033 (6.5277) Acc@1 0.39 (0.74) Acc@5 1.95 (2.98) Memory(MB) 6055[0m
2020-07-10 14:16:59,567 [32mINFO[0m: Epoch: [1/1][ 400/5005] Time 0.219 (0.227) Data 0.001 (0.002) Loss 6.4791 (6.5027) Acc@1 0.78 (0.77) Acc@5 5.08 (3.16) Memory(MB) 6055[0m
2020-07-10 14:17:04,070 [32mINFO[0m: Epoch: [1/1][ 420/5005] Time 0.221 (0.227) Data 0.001 (0.002) Loss 6.4347 (6.4768) Acc@1 0.39 (0.73) Acc@5 3.12 (3.33) Memory(MB) 6055[0m
2020-07-10 14:17:08,855 [32mINFO[0m: Epoch: [1/1][ 440/5005] Time 0.221 (0.229) Data 0.001 (0.002) Loss 6.4331 (6.4631) Acc@1 0.78 (0.73) Acc@5 3.12 (3.44) Memory(MB) 6055[0m
2020-07-10 14:17:13,304 [32mINFO[0m: Epoch: [1/1][ 460/5005] Time 0.220 (0.227) Data 0.001 (0.002) Loss 6.3844 (6.4282) Acc@1 0.39 (0.83) Acc@5 3.91 (3.64) Memory(MB) 6055[0m
2020-07-10 14:17:18,116 [32mINFO[0m: Epoch: [1/1][ 480/5005] Time 0.222 (0.229) Data 0.001 (0.002) Loss 6.3925 (6.4090) Acc@1 0.39 (0.88) Acc@5 3.12 (3.86) Memory(MB) 6055[0m
2020-07-10 14:17:22,560 [32mINFO[0m: Epoch: [1/1][ 500/5005] Time 0.223 (0.228) Data 0.002 (0.002) Loss 6.3000 (6.3762) Acc@1 1.17 (0.98) Acc@5 3.91 (4.20) Memory(MB) 6055[0m
2020-07-10 14:17:27,609 [32mINFO[0m: Epoch: [1/1][ 520/5005] Time 0.220 (0.231) Data 0.001 (0.002) Loss 6.4111 (6.3708) Acc@1 1.56 (1.08) Acc@5 3.91 (4.14) Memory(MB) 6055[0m
2020-07-10 14:17:32,061 [32mINFO[0m: Epoch: [1/1][ 540/5005] Time 0.225 (0.229) Data 0.003 (0.002) Loss 6.2817 (6.3306) Acc@1 1.95 (1.22) Acc@5 6.64 (4.40) Memory(MB) 6055[0m
2020-07-10 14:17:36,551 [32mINFO[0m: Epoch: [1/1][ 560/5005] Time 0.223 (0.229) Data 0.001 (0.002) Loss 6.2233 (6.3059) Acc@1 0.78 (1.23) Acc@5 4.69 (4.53) Memory(MB) 6055[0m
2020-07-10 14:17:40,994 [32mINFO[0m: Epoch: [1/1][ 580/5005] Time 0.221 (0.229) Data 0.002 (0.002) Loss 6.3299 (6.2998) Acc@1 1.17 (1.26) Acc@5 6.64 (4.95) Memory(MB) 6055[0m
2020-07-10 14:17:45,429 [32mINFO[0m: Epoch: [1/1][ 600/5005] Time 0.219 (0.229) Data 0.001 (0.002) Loss 6.1880 (6.2850) Acc@1 0.39 (1.12) Acc@5 5.86 (4.98) Memory(MB) 6055[0m
2020-07-10 14:17:50,349 [32mINFO[0m: Epoch: [1/1][ 620/5005] Time 0.219 (0.231) Data 0.001 (0.002) Loss 6.1826 (6.2478) Acc@1 1.95 (1.26) Acc@5 5.86 (5.25) Memory(MB) 6055[0m
2020-07-10 14:17:54,901 [32mINFO[0m: Epoch: [1/1][ 640/5005] Time 0.221 (0.230) Data 0.001 (0.002) Loss 6.2744 (6.2347) Acc@1 1.95 (1.45) Acc@5 5.47 (5.64) Memory(MB) 6055[0m
2020-07-10 14:17:59,411 [32mINFO[0m: Epoch: [1/1][ 660/5005] Time 0.220 (0.230) Data 0.001 (0.002) Loss 6.1740 (6.2051) Acc@1 2.73 (1.58) Acc@5 6.64 (5.90) Memory(MB) 6055[0m
2020-07-10 14:18:03,846 [32mINFO[0m: Epoch: [1/1][ 680/5005] Time 0.221 (0.228) Data 0.001 (0.002) Loss 6.2022 (6.1879) Acc@1 1.56 (1.61) Acc@5 6.25 (6.15) Memory(MB) 6055[0m
2020-07-10 14:18:09,354 [32mINFO[0m: Epoch: [1/1][ 700/5005] Time 0.222 (0.233) Data 0.000 (0.002) Loss 6.0800 (6.1733) Acc@1 2.73 (1.55) Acc@5 8.20 (6.23) Memory(MB) 6055[0m
2020-07-10 14:18:13,792 [32mINFO[0m: Epoch: [1/1][ 720/5005] Time 0.220 (0.230) Data 0.001 (0.002) Loss 6.1531 (6.1573) Acc@1 1.95 (1.62) Acc@5 7.03 (6.27) Memory(MB) 6055[0m
2020-07-10 14:18:18,343 [32mINFO[0m: Epoch: [1/1][ 740/5005] Time 0.224 (0.231) Data 0.002 (0.002) Loss 6.1402 (6.1195) Acc@1 1.56 (1.66) Acc@5 4.30 (6.66) Memory(MB) 6055[0m
2020-07-10 14:18:22,774 [32mINFO[0m: Epoch: [1/1][ 760/5005] Time 0.221 (0.231) Data 0.001 (0.002) Loss 6.0099 (6.1001) Acc@1 1.17 (1.81) Acc@5 9.77 (7.08) Memory(MB) 6055[0m
2020-07-10 14:18:28,446 [32mINFO[0m: Epoch: [1/1][ 780/5005] Time 0.222 (0.237) Data 0.002 (0.002) Loss 6.0929 (6.0880) Acc@1 1.17 (1.78) Acc@5 5.47 (7.17) Memory(MB) 6055[0m
2020-07-10 14:18:32,900 [32mINFO[0m: Epoch: [1/1][ 800/5005] Time 0.222 (0.237) Data 0.001 (0.002) Loss 5.9747 (6.0806) Acc@1 1.95 (1.77) Acc@5 10.94 (7.16) Memory(MB) 6055[0m
2020-07-10 14:18:37,430 [32mINFO[0m: Epoch: [1/1][ 820/5005] Time 0.221 (0.235) Data 0.001 (0.002) Loss 5.8700 (6.0773) Acc@1 1.56 (1.92) Acc@5 9.38 (7.13) Memory(MB) 6055[0m
2020-07-10 14:18:41,891 [32mINFO[0m: Epoch: [1/1][ 840/5005] Time 0.223 (0.234) Data 0.001 (0.002) Loss 6.0080 (6.0529) Acc@1 1.95 (2.00) Acc@5 8.20 (7.12) Memory(MB) 6055[0m
2020-07-10 14:18:47,565 [32mINFO[0m: Epoch: [1/1][ 860/5005] Time 0.218 (0.240) Data 0.001 (0.002) Loss 5.9225 (6.0254) Acc@1 3.91 (2.11) Acc@5 9.38 (7.55) Memory(MB) 6055[0m
2020-07-10 14:18:52,015 [32mINFO[0m: Epoch: [1/1][ 880/5005] Time 0.221 (0.240) Data 0.001 (0.002) Loss 5.7055 (6.0029) Acc@1 4.69 (2.29) Acc@5 8.59 (7.99) Memory(MB) 6055[0m
2020-07-10 14:18:56,527 [32mINFO[0m: Epoch: [1/1][ 900/5005] Time 0.221 (0.235) Data 0.001 (0.002) Loss 5.9500 (5.9832) Acc@1 3.12 (2.36) Acc@5 10.16 (8.12) Memory(MB) 6055[0m
2020-07-10 14:19:00,976 [32mINFO[0m: Epoch: [1/1][ 920/5005] Time 0.220 (0.235) Data 0.001 (0.002) Loss 5.9244 (5.9588) Acc@1 2.73 (2.51) Acc@5 5.86 (8.19) Memory(MB) 6055[0m
2020-07-10 14:19:05,441 [32mINFO[0m: Epoch: [1/1][ 940/5005] Time 0.228 (0.235) Data 0.001 (0.002) Loss 5.8708 (5.9507) Acc@1 2.73 (2.72) Acc@5 9.38 (8.61) Memory(MB) 6055[0m
2020-07-10 14:19:11,052 [32mINFO[0m: Epoch: [1/1][ 960/5005] Time 0.222 (0.241) Data 0.001 (0.002) Loss 6.0692 (5.9118) Acc@1 1.95 (2.89) Acc@5 7.42 (9.33) Memory(MB) 6055[0m
2020-07-10 14:19:15,500 [32mINFO[0m: Epoch: [1/1][ 980/5005] Time 0.221 (0.235) Data 0.001 (0.002) Loss 6.0065 (5.8954) Acc@1 1.95 (2.65) Acc@5 9.38 (9.45) Memory(MB) 6055[0m
2020-07-10 14:19:20,027 [32mINFO[0m: Epoch: [1/1][1000/5005] Time 0.226 (0.235) Data 0.001 (0.002) Loss 5.9181 (5.8972) Acc@1 2.73 (2.80) Acc@5 10.16 (9.55) Memory(MB) 6055[0m
2020-07-10 14:19:24,482 [32mINFO[0m: Epoch: [1/1][1020/5005] Time 0.223 (0.235) Data 0.001 (0.002) Loss 5.8776 (5.9093) Acc@1 3.12 (2.68) Acc@5 7.81 (9.14) Memory(MB) 6055[0m
2020-07-10 14:19:29,799 [32mINFO[0m: Epoch: [1/1][1040/5005] Time 0.223 (0.239) Data 0.002 (0.002) Loss 5.8622 (5.8890) Acc@1 4.69 (2.91) Acc@5 10.94 (9.40) Memory(MB) 6055[0m
2020-07-10 14:19:34,237 [32mINFO[0m: Epoch: [1/1][1060/5005] Time 0.220 (0.233) Data 0.001 (0.002) Loss 5.7495 (5.8616) Acc@1 4.30 (2.87) Acc@5 11.33 (9.73) Memory(MB) 6055[0m
2020-07-10 14:19:38,747 [32mINFO[0m: Epoch: [1/1][1080/5005] Time 0.223 (0.233) Data 0.002 (0.002) Loss 5.9396 (5.8420) Acc@1 1.95 (2.94) Acc@5 8.98 (9.96) Memory(MB) 6055[0m
2020-07-10 14:19:43,182 [32mINFO[0m: Epoch: [1/1][1100/5005] Time 0.223 (0.233) Data 0.001 (0.002) Loss 5.6051 (5.8183) Acc@1 5.47 (2.99) Acc@5 13.28 (10.34) Memory(MB) 6055[0m
2020-07-10 14:19:48,062 [32mINFO[0m: Epoch: [1/1][1120/5005] Time 0.218 (0.235) Data 0.001 (0.002) Loss 5.9553 (5.8024) Acc@1 1.95 (3.13) Acc@5 7.42 (10.62) Memory(MB) 6055[0m
2020-07-10 14:19:52,495 [32mINFO[0m: Epoch: [1/1][1140/5005] Time 0.222 (0.235) Data 0.001 (0.002) Loss 5.8631 (5.8041) Acc@1 1.17 (3.19) Acc@5 8.20 (10.93) Memory(MB) 6055[0m
2020-07-10 14:19:57,259 [32mINFO[0m: Epoch: [1/1][1160/5005] Time 0.219 (0.231) Data 0.001 (0.002) Loss 5.6775 (5.7812) Acc@1 3.91 (3.21) Acc@5 12.11 (11.27) Memory(MB) 6055[0m
2020-07-10 14:20:01,687 [32mINFO[0m: Epoch: [1/1][1180/5005] Time 0.222 (0.230) Data 0.001 (0.002) Loss 5.8459 (5.7427) Acc@1 3.52 (3.62) Acc@5 10.16 (11.87) Memory(MB) 6055[0m
2020-07-10 14:20:06,766 [32mINFO[0m: Epoch: [1/1][1200/5005] Time 0.468 (0.233) Data 0.012 (0.002) Loss 5.8161 (5.7315) Acc@1 3.12 (3.73) Acc@5 12.89 (12.20) Memory(MB) 6055[0m
2020-07-10 14:20:11,201 [32mINFO[0m: Epoch: [1/1][1220/5005] Time 0.223 (0.233) Data 0.001 (0.002) Loss 5.6670 (5.7257) Acc@1 3.52 (3.81) Acc@5 11.33 (11.70) Memory(MB) 6055[0m
2020-07-10 14:20:15,646 [32mINFO[0m: Epoch: [1/1][1240/5005] Time 0.222 (0.229) Data 0.001 (0.002) Loss 5.6609 (5.7226) Acc@1 3.91 (3.82) Acc@5 13.28 (11.63) Memory(MB) 6055[0m
2020-07-10 14:20:20,155 [32mINFO[0m: Epoch: [1/1][1260/5005] Time 0.222 (0.229) Data 0.001 (0.002) Loss 5.7606 (5.7153) Acc@1 4.30 (3.79) Acc@5 11.72 (11.76) Memory(MB) 6055[0m
2020-07-10 14:20:24,601 [32mINFO[0m: Epoch: [1/1][1280/5005] Time 0.222 (0.229) Data 0.001 (0.002) Loss 5.8412 (5.7166) Acc@1 3.12 (3.79) Acc@5 9.77 (11.56) Memory(MB) 6055[0m
2020-07-10 14:20:29,609 [32mINFO[0m: Epoch: [1/1][1300/5005] Time 0.221 (0.232) Data 0.002 (0.002) Loss 5.5604 (5.6712) Acc@1 6.25 (3.96) Acc@5 14.45 (12.23) Memory(MB) 6055[0m
2020-07-10 14:20:34,052 [32mINFO[0m: Epoch: [1/1][1320/5005] Time 0.221 (0.229) Data 0.001 (0.002) Loss 5.7381 (5.6725) Acc@1 1.95 (4.02) Acc@5 9.38 (12.30) Memory(MB) 6055[0m
2020-07-10 14:20:38,566 [32mINFO[0m: Epoch: [1/1][1340/5005] Time 0.227 (0.230) Data 0.001 (0.002) Loss 5.6238 (5.6493) Acc@1 3.91 (4.26) Acc@5 13.67 (13.01) Memory(MB) 6055[0m
2020-07-10 14:20:43,000 [32mINFO[0m: Epoch: [1/1][1360/5005] Time 0.224 (0.228) Data 0.001 (0.002) Loss 5.8654 (5.6447) Acc@1 2.34 (4.17) Acc@5 10.16 (13.05) Memory(MB) 6055[0m
2020-07-10 14:20:48,682 [32mINFO[0m: Epoch: [1/1][1380/5005] Time 0.222 (0.235) Data 0.000 (0.002) Loss 5.6699 (5.6371) Acc@1 4.30 (4.09) Acc@5 11.72 (12.71) Memory(MB) 6055[0m
2020-07-10 14:20:53,121 [32mINFO[0m: Epoch: [1/1][1400/5005] Time 0.219 (0.231) Data 0.001 (0.002) Loss 5.5117 (5.6328) Acc@1 3.52 (4.02) Acc@5 13.67 (12.74) Memory(MB) 6055[0m
2020-07-10 14:20:57,606 [32mINFO[0m: Epoch: [1/1][1420/5005] Time 0.221 (0.232) Data 0.001 (0.002) Loss 5.6046 (5.5965) Acc@1 3.12 (4.10) Acc@5 12.50 (13.18) Memory(MB) 6055[0m
2020-07-10 14:21:02,047 [32mINFO[0m: Epoch: [1/1][1440/5005] Time 0.225 (0.232) Data 0.001 (0.002) Loss 5.6617 (5.5653) Acc@1 4.30 (4.38) Acc@5 11.72 (13.86) Memory(MB) 6055[0m
2020-07-10 14:21:07,492 [32mINFO[0m: Epoch: [1/1][1460/5005] Time 0.221 (0.236) Data 0.001 (0.002) Loss 5.4552 (5.5501) Acc@1 4.69 (4.50) Acc@5 14.45 (14.12) Memory(MB) 6055[0m
2020-07-10 14:21:11,943 [32mINFO[0m: Epoch: [1/1][1480/5005] Time 0.221 (0.236) Data 0.002 (0.002) Loss 5.5217 (5.5330) Acc@1 3.12 (4.45) Acc@5 14.45 (14.13) Memory(MB) 6055[0m
2020-07-10 14:21:31,678 [32mINFO[0m: Test: [  0/196] Time 11.267 (11.267) Loss 7.8618 (7.8618) Acc@1 3.12 (3.12) Acc@5 15.62 (15.62)[0m
2020-07-10 14:21:34,331 [32mINFO[0m: Test: [ 20/196] Time 0.079 (0.129) Loss 8.5098 (6.9389) Acc@1 3.12 (4.17) Acc@5 9.38 (12.95)[0m
2020-07-10 14:21:37,195 [32mINFO[0m: Test: [ 40/196] Time 0.079 (0.149) Loss 5.4206 (6.7234) Acc@1 6.25 (4.19) Acc@5 25.00 (14.41)[0m
2020-07-10 14:21:40,294 [32mINFO[0m: Test: [ 60/196] Time 0.081 (0.151) Loss 7.5981 (6.6498) Acc@1 3.12 (4.25) Acc@5 12.50 (15.37)[0m
2020-07-10 14:21:43,100 [32mINFO[0m: Test: [ 80/196] Time 0.080 (0.125) Loss 5.9275 (6.5832) Acc@1 0.00 (4.09) Acc@5 9.38 (15.32)[0m
2020-07-10 14:21:45,853 [32mINFO[0m: Test: [100/196] Time 0.078 (0.128) Loss 7.1877 (6.5865) Acc@1 3.12 (4.15) Acc@5 12.50 (15.16)[0m
2020-07-10 14:21:48,323 [32mINFO[0m: Test: [120/196] Time 0.079 (0.119) Loss 5.4102 (6.5398) Acc@1 6.25 (4.18) Acc@5 12.50 (15.21)[0m
2020-07-10 14:21:50,986 [32mINFO[0m: Test: [140/196] Time 0.081 (0.114) Loss 6.7998 (6.5737) Acc@1 12.50 (4.21) Acc@5 28.12 (15.07)[0m
2020-07-10 14:21:53,953 [32mINFO[0m: Test: [160/196] Time 0.078 (0.158) Loss 7.9440 (6.6098) Acc@1 3.12 (4.27) Acc@5 9.38 (14.79)[0m
2020-07-10 14:21:56,987 [32mINFO[0m: Test: [180/196] Time 0.081 (0.157) Loss 6.7409 (6.6246) Acc@1 3.12 (4.37) Acc@5 12.50 (14.78)[0m
2020-07-10 14:22:02,706 [32mINFO[0m:  Rank 0 Loss 6.6416 Acc@1 272 Acc@5 925 total_size 6250[0m
2020-07-10 14:22:02,708 [32mINFO[0m:  Rank 5 Loss 6.1466 Acc@1 298 Acc@5 876 total_size 6250[0m
2020-07-10 14:22:02,707 [32mINFO[0m:  Rank 6 Loss 6.2678 Acc@1 291 Acc@5 849 total_size 6250[0m
2020-07-10 14:22:02,709 [32mINFO[0m:  Rank 2 Loss 6.0343 Acc@1 294 Acc@5 958 total_size 6250[0m
2020-07-10 14:22:02,709 [32mINFO[0m:  Rank 3 Loss 6.0952 Acc@1 278 Acc@5 888 total_size 6250[0m
2020-07-10 14:22:02,710 [32mINFO[0m:  Rank 4 Loss 6.4608 Acc@1 277 Acc@5 879 total_size 6250[0m
2020-07-10 14:22:02,710 [32mINFO[0m:  Rank 1 Loss 6.0297 Acc@1 284 Acc@5 922 total_size 6250[0m
2020-07-10 14:22:02,713 [32mINFO[0m:  Rank 7 Loss 6.3885 Acc@1 291 Acc@5 918 total_size 6250[0m
2020-07-10 14:22:02,752 [32mINFO[0m:  * All Loss 6.2581 Acc@1 4.570 (2285/50000) Acc@5 14.430 (7215/50000)[0m
