--------------------------------------------------------------------------
No OpenFabrics connection schemes reported that they were able to be
used on a specific port.  As such, the openib BTL (OpenFabrics
support) will be disabled for this port.

  Local host:           SH-IDC1-10-198-4-50
  Local device:         mlx5_0
  Local port:           1
  CPCs attempted:       rdmacm, udcm
--------------------------------------------------------------------------
--------------------------------------------------------------------------
No OpenFabrics connection schemes reported that they were able to be
used on a specific port.  As such, the openib BTL (OpenFabrics
support) will be disabled for this port.

  Local host:           SH-IDC1-10-198-4-50
  Local device:         mlx5_0
  Local port:           1
  CPCs attempted:       rdmacm, udcm
--------------------------------------------------------------------------
--------------------------------------------------------------------------
No OpenFabrics connection schemes reported that they were able to be
used on a specific port.  As such, the openib BTL (OpenFabrics
support) will be disabled for this port.

  Local host:           SH-IDC1-10-198-4-50
  Local device:         mlx5_0
  Local port:           1
  CPCs attempted:       rdmacm, udcm
--------------------------------------------------------------------------
--------------------------------------------------------------------------
No OpenFabrics connection schemes reported that they were able to be
used on a specific port.  As such, the openib BTL (OpenFabrics
support) will be disabled for this port.

  Local host:           SH-IDC1-10-198-4-50
  Local device:         mlx5_0
  Local port:           1
  CPCs attempted:       rdmacm, udcm
--------------------------------------------------------------------------
--------------------------------------------------------------------------
No OpenFabrics connection schemes reported that they were able to be
used on a specific port.  As such, the openib BTL (OpenFabrics
support) will be disabled for this port.

  Local host:           SH-IDC1-10-198-4-50
  Local device:         mlx5_0
  Local port:           1
  CPCs attempted:       rdmacm, udcm
--------------------------------------------------------------------------
--------------------------------------------------------------------------
No OpenFabrics connection schemes reported that they were able to be
used on a specific port.  As such, the openib BTL (OpenFabrics
support) will be disabled for this port.

  Local host:           SH-IDC1-10-198-4-50
  Local device:         mlx5_0
  Local port:           1
  CPCs attempted:       rdmacm, udcm
--------------------------------------------------------------------------
--------------------------------------------------------------------------
No OpenFabrics connection schemes reported that they were able to be
used on a specific port.  As such, the openib BTL (OpenFabrics
support) will be disabled for this port.

  Local host:           SH-IDC1-10-198-4-50
  Local device:         mlx5_0
  Local port:           1
  CPCs attempted:       rdmacm, udcm
--------------------------------------------------------------------------
--------------------------------------------------------------------------
No OpenFabrics connection schemes reported that they were able to be
used on a specific port.  As such, the openib BTL (OpenFabrics
support) will be disabled for this port.

  Local host:           SH-IDC1-10-198-4-50
  Local device:         mlx5_0
  Local port:           1
  CPCs attempted:       rdmacm, udcm
--------------------------------------------------------------------------
2020-07-10 14:16:15,639 [32mINFO[0m: Parrots 0.6.0 | Git hash: d7b26529 | Compute hash: 2c662d99[0m
2020-07-10 14:16:15,639 [32mINFO[0m: Parrots 0.6.0 | Git hash: d7b26529 | Compute hash: 2c662d99[0m
2020-07-10 14:16:15,639 [32mINFO[0m: Parrots 0.6.0 | Git hash: d7b26529 | Compute hash: 2c662d99[0m
2020-07-10 14:16:15,639 [32mINFO[0m: Parrots 0.6.0 | Git hash: d7b26529 | Compute hash: 2c662d99[0m
2020-07-10 14:16:15,639 [32mINFO[0m: Parrots 0.6.0 | Git hash: d7b26529 | Compute hash: 2c662d99[0m
2020-07-10 14:16:15,639 [32mINFO[0m: Parrots 0.6.0 | Git hash: d7b26529 | Compute hash: 2c662d99[0m
2020-07-10 14:16:15,639 [32mINFO[0m: Parrots 0.6.0 | Git hash: d7b26529 | Compute hash: 2c662d99[0m
2020-07-10 14:16:15,639 [32mINFO[0m: Parrots 0.6.0 | Git hash: d7b26529 | Compute hash: 2c662d99[0m
2020-07-10 14:16:17,172 [32mINFO[0m: rank 0 of 8 jobs, in SH-IDC1-10-198-4-50[0m
2020-07-10 14:16:17,172 [32mINFO[0m: rank 1 of 8 jobs, in SH-IDC1-10-198-4-50[0m
2020-07-10 14:16:17,172 [32mINFO[0m: rank 3 of 8 jobs, in SH-IDC1-10-198-4-50[0m
2020-07-10 14:16:17,172 [32mINFO[0m: rank 4 of 8 jobs, in SH-IDC1-10-198-4-50[0m
2020-07-10 14:16:17,172 [32mINFO[0m: rank 5 of 8 jobs, in SH-IDC1-10-198-4-50[0m
2020-07-10 14:16:17,172 [32mINFO[0m: rank 6 of 8 jobs, in SH-IDC1-10-198-4-50[0m
2020-07-10 14:16:17,173 [32mINFO[0m: rank 7 of 8 jobs, in SH-IDC1-10-198-4-50[0m
2020-07-10 14:16:17,173 [32mINFO[0m: rank 2 of 8 jobs, in SH-IDC1-10-198-4-50[0m
2020-07-10 14:16:20,132 [32mINFO[0m: config
{
  "seed": 99,
  "net": {
    "arch": "se_resnet152",
    "kwargs": {
      "num_classes": 1000
    }
  },
  "dataset": {
    "train": {
      "meta_file": "/mnt/lustre/share/images/meta/train.txt",
      "image_dir": "/mnt/lustre/share/images/train",
      "random_resize_crop": 224,
      "colorjitter": [
        0.2,
        0.2,
        0.2,
        0.1
      ],
      "mean": [
        0.485,
        0.456,
        0.406
      ],
      "std": [
        0.229,
        0.224,
        0.225
      ],
      "mirror": true
    },
    "test": {
      "meta_file": "/mnt/lustre/share/images/meta/val.txt",
      "image_dir": "/mnt/lustre/share/images/val",
      "resize": 256,
      "center_crop": [
        224,
        224
      ],
      "random_resize_crop": null,
      "mean": [
        0.485,
        0.456,
        0.406
      ],
      "std": [
        0.229,
        0.224,
        0.225
      ],
      "mirror": false
    },
    "batch_size": 32,
    "workers": 4
  },
  "trainer": {
    "max_epoch": 1,
    "test_freq": 1,
    "log_freq": 20,
    "bn": {
      "syncbn": false
    },
    "mixed_precision": {
      "half": false,
      "loss_scale": 128.0,
      "float_bn": true
    },
    "optimizer": {
      "type": "SGD",
      "kwargs": {
        "lr": 0.1,
        "momentum": 0.9,
        "weight_decay": 0.0001
      }
    },
    "lr_scheduler": {
      "warmup_epochs": 0,
      "type": "MultiStepLR",
      "kwargs": {
        "milestones": [
          30,
          60,
          90
        ],
        "gamma": 0.1
      }
    }
  },
  "saver": {
    "pretrian_model": null,
    "resume_model": null,
    "save_dir": "checkpoints/se_resnet50"
  }
}[0m
2020-07-10 14:16:20,218 [32mINFO[0m: creating model 'se_resnet152'[0m
2020-07-10 14:16:20,802 [32mINFO[0m: model
DistributedParrotsModel
SENet(
  (layer0): Sequential(
    (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
    (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu1): ReLU(inplace)
    (pool): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=True)
  )
  (layer1): Sequential(
    (0): SEResNetBottleneck(
      (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (se_module): SEModule(
        (avg_pool): AdaptiveAvgPool2d()
        (fc1): Conv2d(256, 16, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace)
        (fc2): Conv2d(16, 256, kernel_size=(1, 1), stride=(1, 1))
        (sigmoid): Sigmoid()
      )
      (downsample): Sequential(
        (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): SEResNetBottleneck(
      (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (se_module): SEModule(
        (avg_pool): AdaptiveAvgPool2d()
        (fc1): Conv2d(256, 16, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace)
        (fc2): Conv2d(16, 256, kernel_size=(1, 1), stride=(1, 1))
        (sigmoid): Sigmoid()
      )
    )
    (2): SEResNetBottleneck(
      (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (se_module): SEModule(
        (avg_pool): AdaptiveAvgPool2d()
        (fc1): Conv2d(256, 16, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace)
        (fc2): Conv2d(16, 256, kernel_size=(1, 1), stride=(1, 1))
        (sigmoid): Sigmoid()
      )
    )
  )
  (layer2): Sequential(
    (0): SEResNetBottleneck(
      (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (se_module): SEModule(
        (avg_pool): AdaptiveAvgPool2d()
        (fc1): Conv2d(512, 32, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace)
        (fc2): Conv2d(32, 512, kernel_size=(1, 1), stride=(1, 1))
        (sigmoid): Sigmoid()
      )
      (downsample): Sequential(
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): SEResNetBottleneck(
      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (se_module): SEModule(
        (avg_pool): AdaptiveAvgPool2d()
        (fc1): Conv2d(512, 32, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace)
        (fc2): Conv2d(32, 512, kernel_size=(1, 1), stride=(1, 1))
        (sigmoid): Sigmoid()
      )
    )
    (2): SEResNetBottleneck(
      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (se_module): SEModule(
        (avg_pool): AdaptiveAvgPool2d()
        (fc1): Conv2d(512, 32, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace)
        (fc2): Conv2d(32, 512, kernel_size=(1, 1), stride=(1, 1))
        (sigmoid): Sigmoid()
      )
    )
    (3): SEResNetBottleneck(
      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (se_module): SEModule(
        (avg_pool): AdaptiveAvgPool2d()
        (fc1): Conv2d(512, 32, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace)
        (fc2): Conv2d(32, 512, kernel_size=(1, 1), stride=(1, 1))
        (sigmoid): Sigmoid()
      )
    )
    (4): SEResNetBottleneck(
      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (se_module): SEModule(
        (avg_pool): AdaptiveAvgPool2d()
        (fc1): Conv2d(512, 32, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace)
        (fc2): Conv2d(32, 512, kernel_size=(1, 1), stride=(1, 1))
        (sigmoid): Sigmoid()
      )
    )
    (5): SEResNetBottleneck(
      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (se_module): SEModule(
        (avg_pool): AdaptiveAvgPool2d()
        (fc1): Conv2d(512, 32, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace)
        (fc2): Conv2d(32, 512, kernel_size=(1, 1), stride=(1, 1))
        (sigmoid): Sigmoid()
      )
    )
    (6): SEResNetBottleneck(
      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (se_module): SEModule(
        (avg_pool): AdaptiveAvgPool2d()
        (fc1): Conv2d(512, 32, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace)
        (fc2): Conv2d(32, 512, kernel_size=(1, 1), stride=(1, 1))
        (sigmoid): Sigmoid()
      )
    )
    (7): SEResNetBottleneck(
      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (se_module): SEModule(
        (avg_pool): AdaptiveAvgPool2d()
        (fc1): Conv2d(512, 32, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace)
        (fc2): Conv2d(32, 512, kernel_size=(1, 1), stride=(1, 1))
        (sigmoid): Sigmoid()
      )
    )
  )
  (layer3): Sequential(
    (0): SEResNetBottleneck(
      (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (se_module): SEModule(
        (avg_pool): AdaptiveAvgPool2d()
        (fc1): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace)
        (fc2): Conv2d(64, 1024, kernel_size=(1, 1), stride=(1, 1))
        (sigmoid): Sigmoid()
      )
      (downsample): Sequential(
        (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): SEResNetBottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (se_module): SEModule(
        (avg_pool): AdaptiveAvgPool2d()
        (fc1): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace)
        (fc2): Conv2d(64, 1024, kernel_size=(1, 1), stride=(1, 1))
        (sigmoid): Sigmoid()
      )
    )
    (2): SEResNetBottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (se_module): SEModule(
        (avg_pool): AdaptiveAvgPool2d()
        (fc1): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace)
        (fc2): Conv2d(64, 1024, kernel_size=(1, 1), stride=(1, 1))
        (sigmoid): Sigmoid()
      )
    )
    (3): SEResNetBottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (se_module): SEModule(
        (avg_pool): AdaptiveAvgPool2d()
        (fc1): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace)
        (fc2): Conv2d(64, 1024, kernel_size=(1, 1), stride=(1, 1))
        (sigmoid): Sigmoid()
      )
    )
    (4): SEResNetBottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (se_module): SEModule(
        (avg_pool): AdaptiveAvgPool2d()
        (fc1): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace)
        (fc2): Conv2d(64, 1024, kernel_size=(1, 1), stride=(1, 1))
        (sigmoid): Sigmoid()
      )
    )
    (5): SEResNetBottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (se_module): SEModule(
        (avg_pool): AdaptiveAvgPool2d()
        (fc1): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace)
        (fc2): Conv2d(64, 1024, kernel_size=(1, 1), stride=(1, 1))
        (sigmoid): Sigmoid()
      )
    )
    (6): SEResNetBottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (se_module): SEModule(
        (avg_pool): AdaptiveAvgPool2d()
        (fc1): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace)
        (fc2): Conv2d(64, 1024, kernel_size=(1, 1), stride=(1, 1))
        (sigmoid): Sigmoid()
      )
    )
    (7): SEResNetBottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (se_module): SEModule(
        (avg_pool): AdaptiveAvgPool2d()
        (fc1): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace)
        (fc2): Conv2d(64, 1024, kernel_size=(1, 1), stride=(1, 1))
        (sigmoid): Sigmoid()
      )
    )
    (8): SEResNetBottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (se_module): SEModule(
        (avg_pool): AdaptiveAvgPool2d()
        (fc1): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace)
        (fc2): Conv2d(64, 1024, kernel_size=(1, 1), stride=(1, 1))
        (sigmoid): Sigmoid()
      )
    )
    (9): SEResNetBottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (se_module): SEModule(
        (avg_pool): AdaptiveAvgPool2d()
        (fc1): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace)
        (fc2): Conv2d(64, 1024, kernel_size=(1, 1), stride=(1, 1))
        (sigmoid): Sigmoid()
      )
    )
    (10): SEResNetBottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (se_module): SEModule(
        (avg_pool): AdaptiveAvgPool2d()
        (fc1): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace)
        (fc2): Conv2d(64, 1024, kernel_size=(1, 1), stride=(1, 1))
        (sigmoid): Sigmoid()
      )
    )
    (11): SEResNetBottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (se_module): SEModule(
        (avg_pool): AdaptiveAvgPool2d()
        (fc1): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace)
        (fc2): Conv2d(64, 1024, kernel_size=(1, 1), stride=(1, 1))
        (sigmoid): Sigmoid()
      )
    )
    (12): SEResNetBottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (se_module): SEModule(
        (avg_pool): AdaptiveAvgPool2d()
        (fc1): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace)
        (fc2): Conv2d(64, 1024, kernel_size=(1, 1), stride=(1, 1))
        (sigmoid): Sigmoid()
      )
    )
    (13): SEResNetBottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (se_module): SEModule(
        (avg_pool): AdaptiveAvgPool2d()
        (fc1): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace)
        (fc2): Conv2d(64, 1024, kernel_size=(1, 1), stride=(1, 1))
        (sigmoid): Sigmoid()
      )
    )
    (14): SEResNetBottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (se_module): SEModule(
        (avg_pool): AdaptiveAvgPool2d()
        (fc1): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace)
        (fc2): Conv2d(64, 1024, kernel_size=(1, 1), stride=(1, 1))
        (sigmoid): Sigmoid()
      )
    )
    (15): SEResNetBottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (se_module): SEModule(
        (avg_pool): AdaptiveAvgPool2d()
        (fc1): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace)
        (fc2): Conv2d(64, 1024, kernel_size=(1, 1), stride=(1, 1))
        (sigmoid): Sigmoid()
      )
    )
    (16): SEResNetBottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (se_module): SEModule(
        (avg_pool): AdaptiveAvgPool2d()
        (fc1): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace)
        (fc2): Conv2d(64, 1024, kernel_size=(1, 1), stride=(1, 1))
        (sigmoid): Sigmoid()
      )
    )
    (17): SEResNetBottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (se_module): SEModule(
        (avg_pool): AdaptiveAvgPool2d()
        (fc1): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace)
        (fc2): Conv2d(64, 1024, kernel_size=(1, 1), stride=(1, 1))
        (sigmoid): Sigmoid()
      )
    )
    (18): SEResNetBottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (se_module): SEModule(
        (avg_pool): AdaptiveAvgPool2d()
        (fc1): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace)
        (fc2): Conv2d(64, 1024, kernel_size=(1, 1), stride=(1, 1))
        (sigmoid): Sigmoid()
      )
    )
    (19): SEResNetBottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (se_module): SEModule(
        (avg_pool): AdaptiveAvgPool2d()
        (fc1): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace)
        (fc2): Conv2d(64, 1024, kernel_size=(1, 1), stride=(1, 1))
        (sigmoid): Sigmoid()
      )
    )
    (20): SEResNetBottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (se_module): SEModule(
        (avg_pool): AdaptiveAvgPool2d()
        (fc1): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace)
        (fc2): Conv2d(64, 1024, kernel_size=(1, 1), stride=(1, 1))
        (sigmoid): Sigmoid()
      )
    )
    (21): SEResNetBottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (se_module): SEModule(
        (avg_pool): AdaptiveAvgPool2d()
        (fc1): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace)
        (fc2): Conv2d(64, 1024, kernel_size=(1, 1), stride=(1, 1))
        (sigmoid): Sigmoid()
      )
    )
    (22): SEResNetBottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (se_module): SEModule(
        (avg_pool): AdaptiveAvgPool2d()
        (fc1): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace)
        (fc2): Conv2d(64, 1024, kernel_size=(1, 1), stride=(1, 1))
        (sigmoid): Sigmoid()
      )
    )
    (23): SEResNetBottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (se_module): SEModule(
        (avg_pool): AdaptiveAvgPool2d()
        (fc1): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace)
        (fc2): Conv2d(64, 1024, kernel_size=(1, 1), stride=(1, 1))
        (sigmoid): Sigmoid()
      )
    )
    (24): SEResNetBottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (se_module): SEModule(
        (avg_pool): AdaptiveAvgPool2d()
        (fc1): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace)
        (fc2): Conv2d(64, 1024, kernel_size=(1, 1), stride=(1, 1))
        (sigmoid): Sigmoid()
      )
    )
    (25): SEResNetBottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (se_module): SEModule(
        (avg_pool): AdaptiveAvgPool2d()
        (fc1): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace)
        (fc2): Conv2d(64, 1024, kernel_size=(1, 1), stride=(1, 1))
        (sigmoid): Sigmoid()
      )
    )
    (26): SEResNetBottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (se_module): SEModule(
        (avg_pool): AdaptiveAvgPool2d()
        (fc1): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace)
        (fc2): Conv2d(64, 1024, kernel_size=(1, 1), stride=(1, 1))
        (sigmoid): Sigmoid()
      )
    )
    (27): SEResNetBottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (se_module): SEModule(
        (avg_pool): AdaptiveAvgPool2d()
        (fc1): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace)
        (fc2): Conv2d(64, 1024, kernel_size=(1, 1), stride=(1, 1))
        (sigmoid): Sigmoid()
      )
    )
    (28): SEResNetBottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (se_module): SEModule(
        (avg_pool): AdaptiveAvgPool2d()
        (fc1): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace)
        (fc2): Conv2d(64, 1024, kernel_size=(1, 1), stride=(1, 1))
        (sigmoid): Sigmoid()
      )
    )
    (29): SEResNetBottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (se_module): SEModule(
        (avg_pool): AdaptiveAvgPool2d()
        (fc1): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace)
        (fc2): Conv2d(64, 1024, kernel_size=(1, 1), stride=(1, 1))
        (sigmoid): Sigmoid()
      )
    )
    (30): SEResNetBottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (se_module): SEModule(
        (avg_pool): AdaptiveAvgPool2d()
        (fc1): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace)
        (fc2): Conv2d(64, 1024, kernel_size=(1, 1), stride=(1, 1))
        (sigmoid): Sigmoid()
      )
    )
    (31): SEResNetBottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (se_module): SEModule(
        (avg_pool): AdaptiveAvgPool2d()
        (fc1): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace)
        (fc2): Conv2d(64, 1024, kernel_size=(1, 1), stride=(1, 1))
        (sigmoid): Sigmoid()
      )
    )
    (32): SEResNetBottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (se_module): SEModule(
        (avg_pool): AdaptiveAvgPool2d()
        (fc1): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace)
        (fc2): Conv2d(64, 1024, kernel_size=(1, 1), stride=(1, 1))
        (sigmoid): Sigmoid()
      )
    )
    (33): SEResNetBottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (se_module): SEModule(
        (avg_pool): AdaptiveAvgPool2d()
        (fc1): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace)
        (fc2): Conv2d(64, 1024, kernel_size=(1, 1), stride=(1, 1))
        (sigmoid): Sigmoid()
      )
    )
    (34): SEResNetBottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (se_module): SEModule(
        (avg_pool): AdaptiveAvgPool2d()
        (fc1): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace)
        (fc2): Conv2d(64, 1024, kernel_size=(1, 1), stride=(1, 1))
        (sigmoid): Sigmoid()
      )
    )
    (35): SEResNetBottleneck(
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (se_module): SEModule(
        (avg_pool): AdaptiveAvgPool2d()
        (fc1): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace)
        (fc2): Conv2d(64, 1024, kernel_size=(1, 1), stride=(1, 1))
        (sigmoid): Sigmoid()
      )
    )
  )
  (layer4): Sequential(
    (0): SEResNetBottleneck(
      (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (se_module): SEModule(
        (avg_pool): AdaptiveAvgPool2d()
        (fc1): Conv2d(2048, 128, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace)
        (fc2): Conv2d(128, 2048, kernel_size=(1, 1), stride=(1, 1))
        (sigmoid): Sigmoid()
      )
      (downsample): Sequential(
        (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): SEResNetBottleneck(
      (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (se_module): SEModule(
        (avg_pool): AdaptiveAvgPool2d()
        (fc1): Conv2d(2048, 128, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace)
        (fc2): Conv2d(128, 2048, kernel_size=(1, 1), stride=(1, 1))
        (sigmoid): Sigmoid()
      )
    )
    (2): SEResNetBottleneck(
      (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (se_module): SEModule(
        (avg_pool): AdaptiveAvgPool2d()
        (fc1): Conv2d(2048, 128, kernel_size=(1, 1), stride=(1, 1))
        (relu): ReLU(inplace)
        (fc2): Conv2d(128, 2048, kernel_size=(1, 1), stride=(1, 1))
        (sigmoid): Sigmoid()
      )
    )
  )
  (avg_pool): AvgPool2d(kernel_size=7, stride=1, padding=0)
  (last_linear): Linear(in_features=2048, out_features=1000, bias=True)
)[0m
2020-07-10 14:16:20,802 [32mINFO[0m: loss
CrossEntropyLoss()[0m
2020-07-10 14:16:20,805 [32mINFO[0m: optimizer
SGD (
Parameter Group 0
    dampening: 0
    hold_grads: False
    lr: 0.1
    momentum: 0.9
    nesterov: False
    weight_decay: 0.0001
)[0m
2020-07-10 14:16:22,554 [32mINFO[0m: ==> begin trace[0m
2020-07-10 14:16:41,269 [32mINFO[0m: ==> tr_data dumped[0m
2020-07-10 14:16:41,867 [32mINFO[0m: => trace and tr_func saved[0m
2020-07-10 14:16:52,001 [32mINFO[0m: Epoch: [1/1][   0/5005] Time 10.131 (10.131) Data 6.274 (6.274) Loss 6.9441 (6.9441) Acc@1 0.00 (0.00) Acc@5 0.39 (0.39) Memory(MB) 8186[0m
2020-07-10 14:16:59,205 [32mINFO[0m: Epoch: [1/1][  20/5005] Time 0.346 (0.825) Data 0.005 (0.301) Loss 7.0137 (6.9917) Acc@1 0.00 (0.11) Acc@5 1.56 (0.63) Memory(MB) 8186[0m
2020-07-10 14:17:07,217 [32mINFO[0m: Epoch: [1/1][  40/5005] Time 0.350 (0.618) Data 0.003 (0.155) Loss 6.9237 (6.9682) Acc@1 0.00 (0.10) Acc@5 0.78 (0.63) Memory(MB) 8186[0m
2020-07-10 14:17:14,289 [32mINFO[0m: Epoch: [1/1][  60/5005] Time 0.349 (0.531) Data 0.002 (0.105) Loss 6.8963 (6.9399) Acc@1 0.39 (0.16) Acc@5 1.56 (0.75) Memory(MB) 8186[0m
2020-07-10 14:17:21,311 [32mINFO[0m: Epoch: [1/1][  80/5005] Time 0.353 (0.487) Data 0.002 (0.080) Loss 6.8881 (6.9052) Acc@1 0.00 (0.22) Acc@5 0.00 (0.93) Memory(MB) 8186[0m
2020-07-10 14:17:28,965 [32mINFO[0m: Epoch: [1/1][ 100/5005] Time 0.349 (0.466) Data 0.002 (0.065) Loss 6.8839 (6.8781) Acc@1 0.39 (0.23) Acc@5 0.78 (1.13) Memory(MB) 8186[0m
2020-07-10 14:17:36,020 [32mINFO[0m: Epoch: [1/1][ 120/5005] Time 0.350 (0.447) Data 0.002 (0.055) Loss 6.8560 (6.8470) Acc@1 1.17 (0.32) Acc@5 1.95 (1.34) Memory(MB) 8186[0m
2020-07-10 14:17:43,693 [32mINFO[0m: Epoch: [1/1][ 140/5005] Time 0.351 (0.438) Data 0.001 (0.048) Loss 6.7930 (6.8219) Acc@1 0.39 (0.34) Acc@5 3.12 (1.56) Memory(MB) 8186[0m
2020-07-10 14:17:50,723 [32mINFO[0m: Epoch: [1/1][ 160/5005] Time 0.350 (0.427) Data 0.001 (0.042) Loss 6.8173 (6.7953) Acc@1 0.39 (0.30) Acc@5 1.56 (1.73) Memory(MB) 8186[0m
2020-07-10 14:17:57,754 [32mINFO[0m: Epoch: [1/1][ 180/5005] Time 0.349 (0.419) Data 0.001 (0.037) Loss 6.7750 (6.7679) Acc@1 0.00 (0.30) Acc@5 0.39 (1.87) Memory(MB) 8186[0m
2020-07-10 14:18:05,334 [32mINFO[0m: Epoch: [1/1][ 200/5005] Time 0.354 (0.366) Data 0.001 (0.003) Loss 6.7376 (6.7447) Acc@1 1.95 (0.42) Acc@5 4.30 (1.89) Memory(MB) 8186[0m
2020-07-10 14:18:12,360 [32mINFO[0m: Epoch: [1/1][ 220/5005] Time 0.350 (0.365) Data 0.001 (0.003) Loss 6.6951 (6.7285) Acc@1 0.78 (0.45) Acc@5 4.30 (1.91) Memory(MB) 8186[0m
2020-07-10 14:18:19,366 [32mINFO[0m: Epoch: [1/1][ 240/5005] Time 0.349 (0.360) Data 0.001 (0.003) Loss 6.7254 (6.7161) Acc@1 0.00 (0.49) Acc@5 2.34 (2.05) Memory(MB) 8186[0m
2020-07-10 14:18:27,671 [32mINFO[0m: Epoch: [1/1][ 260/5005] Time 0.349 (0.366) Data 0.001 (0.003) Loss 6.6616 (6.6915) Acc@1 0.78 (0.41) Acc@5 1.56 (2.10) Memory(MB) 8186[0m
2020-07-10 14:18:34,661 [32mINFO[0m: Epoch: [1/1][ 280/5005] Time 0.350 (0.366) Data 0.001 (0.003) Loss 6.5950 (6.6594) Acc@1 0.39 (0.48) Acc@5 1.56 (2.22) Memory(MB) 8186[0m
2020-07-10 14:18:41,659 [32mINFO[0m: Epoch: [1/1][ 300/5005] Time 0.347 (0.363) Data 0.004 (0.002) Loss 6.7155 (6.6385) Acc@1 0.78 (0.53) Acc@5 2.34 (2.37) Memory(MB) 8186[0m
2020-07-10 14:18:49,507 [32mINFO[0m: Epoch: [1/1][ 320/5005] Time 0.349 (0.367) Data 0.001 (0.002) Loss 6.6288 (6.6120) Acc@1 0.78 (0.65) Acc@5 2.34 (2.66) Memory(MB) 8186[0m
2020-07-10 14:18:56,508 [32mINFO[0m: Epoch: [1/1][ 340/5005] Time 0.349 (0.363) Data 0.001 (0.002) Loss 6.5812 (6.6040) Acc@1 0.78 (0.62) Acc@5 3.91 (2.69) Memory(MB) 8186[0m
2020-07-10 14:19:04,135 [32mINFO[0m: Epoch: [1/1][ 360/5005] Time 0.350 (0.366) Data 0.001 (0.002) Loss 6.5326 (6.5789) Acc@1 1.17 (0.56) Acc@5 3.91 (2.70) Memory(MB) 8186[0m
2020-07-10 14:19:11,127 [32mINFO[0m: Epoch: [1/1][ 380/5005] Time 0.350 (0.366) Data 0.001 (0.002) Loss 6.4956 (6.5464) Acc@1 0.78 (0.56) Acc@5 1.95 (2.83) Memory(MB) 8186[0m
2020-07-10 14:19:18,126 [32mINFO[0m: Epoch: [1/1][ 400/5005] Time 0.350 (0.363) Data 0.001 (0.002) Loss 6.5150 (6.5263) Acc@1 0.00 (0.67) Acc@5 1.95 (2.98) Memory(MB) 8186[0m
2020-07-10 14:19:26,888 [32mINFO[0m: Epoch: [1/1][ 420/5005] Time 0.354 (0.372) Data 0.001 (0.003) Loss 6.4283 (6.4966) Acc@1 1.56 (0.77) Acc@5 5.08 (3.33) Memory(MB) 8186[0m
2020-07-10 14:19:33,890 [32mINFO[0m: Epoch: [1/1][ 440/5005] Time 0.348 (0.372) Data 0.001 (0.003) Loss 6.4967 (6.4688) Acc@1 0.00 (0.73) Acc@5 4.30 (3.59) Memory(MB) 8186[0m
2020-07-10 14:19:40,906 [32mINFO[0m: Epoch: [1/1][ 460/5005] Time 0.352 (0.365) Data 0.001 (0.003) Loss 6.3691 (6.4503) Acc@1 1.56 (0.65) Acc@5 4.30 (3.55) Memory(MB) 8186[0m
2020-07-10 14:19:49,129 [32mINFO[0m: Epoch: [1/1][ 480/5005] Time 0.351 (0.372) Data 0.002 (0.003) Loss 6.3983 (6.4237) Acc@1 1.56 (0.85) Acc@5 5.08 (3.70) Memory(MB) 8186[0m
2020-07-10 14:19:56,146 [32mINFO[0m: Epoch: [1/1][ 500/5005] Time 0.349 (0.372) Data 0.001 (0.003) Loss 6.3759 (6.3968) Acc@1 0.39 (1.04) Acc@5 3.91 (3.95) Memory(MB) 8186[0m
2020-07-10 14:20:04,737 [32mINFO[0m: Epoch: [1/1][ 520/5005] Time 0.350 (0.375) Data 0.002 (0.003) Loss 6.2731 (6.3729) Acc@1 2.73 (1.02) Acc@5 6.64 (4.11) Memory(MB) 8186[0m
2020-07-10 14:20:11,775 [32mINFO[0m: Epoch: [1/1][ 540/5005] Time 0.350 (0.376) Data 0.001 (0.003) Loss 6.3971 (6.3521) Acc@1 0.78 (1.01) Acc@5 3.12 (4.24) Memory(MB) 8186[0m
2020-07-10 14:20:18,790 [32mINFO[0m: Epoch: [1/1][ 560/5005] Time 0.351 (0.373) Data 0.001 (0.003) Loss 6.2940 (6.3388) Acc@1 1.95 (1.21) Acc@5 4.69 (4.50) Memory(MB) 8186[0m
2020-07-10 14:20:26,252 [32mINFO[0m: Epoch: [1/1][ 580/5005] Time 0.349 (0.375) Data 0.001 (0.003) Loss 6.3846 (6.3316) Acc@1 1.56 (1.34) Acc@5 4.69 (4.66) Memory(MB) 8186[0m
2020-07-10 14:20:33,271 [32mINFO[0m: Epoch: [1/1][ 600/5005] Time 0.351 (0.375) Data 0.002 (0.003) Loss 6.1251 (6.3048) Acc@1 0.78 (1.24) Acc@5 5.86 (4.60) Memory(MB) 8186[0m
2020-07-10 14:20:40,291 [32mINFO[0m: Epoch: [1/1][ 620/5005] Time 0.351 (0.366) Data 0.001 (0.003) Loss 6.2649 (6.2822) Acc@1 2.34 (1.30) Acc@5 4.30 (4.80) Memory(MB) 8186[0m
2020-07-10 14:20:48,328 [32mINFO[0m: Epoch: [1/1][ 640/5005] Time 0.349 (0.371) Data 0.001 (0.003) Loss 6.1914 (6.2502) Acc@1 1.56 (1.32) Acc@5 5.47 (5.06) Memory(MB) 8186[0m
2020-07-10 14:20:55,339 [32mINFO[0m: Epoch: [1/1][ 660/5005] Time 0.350 (0.371) Data 0.001 (0.003) Loss 6.1537 (6.2406) Acc@1 2.34 (1.46) Acc@5 7.81 (5.38) Memory(MB) 8186[0m
2020-07-10 14:21:02,357 [32mINFO[0m: Epoch: [1/1][ 680/5005] Time 0.353 (0.365) Data 0.001 (0.002) Loss 6.1650 (6.2174) Acc@1 1.17 (1.43) Acc@5 5.86 (5.64) Memory(MB) 8186[0m
2020-07-10 14:21:09,961 [32mINFO[0m: Epoch: [1/1][ 700/5005] Time 0.349 (0.368) Data 0.001 (0.003) Loss 6.3257 (6.1994) Acc@1 1.56 (1.42) Acc@5 3.91 (5.57) Memory(MB) 8186[0m
2020-07-10 14:21:16,958 [32mINFO[0m: Epoch: [1/1][ 720/5005] Time 0.349 (0.360) Data 0.001 (0.002) Loss 6.2029 (6.1754) Acc@1 0.78 (1.51) Acc@5 3.91 (5.78) Memory(MB) 8186[0m
2020-07-10 14:21:25,195 [32mINFO[0m: Epoch: [1/1][ 740/5005] Time 0.351 (0.366) Data 0.002 (0.003) Loss 6.1977 (6.1566) Acc@1 2.73 (1.79) Acc@5 3.52 (6.22) Memory(MB) 8186[0m
2020-07-10 14:21:32,207 [32mINFO[0m: Epoch: [1/1][ 760/5005] Time 0.350 (0.366) Data 0.001 (0.003) Loss 6.0503 (6.1521) Acc@1 2.73 (1.76) Acc@5 7.42 (6.29) Memory(MB) 8186[0m
2020-07-10 14:21:39,210 [32mINFO[0m: Epoch: [1/1][ 780/5005] Time 0.350 (0.364) Data 0.001 (0.002) Loss 6.0124 (6.1364) Acc@1 0.78 (1.80) Acc@5 4.69 (6.25) Memory(MB) 8186[0m
2020-07-10 14:21:46,921 [32mINFO[0m: Epoch: [1/1][ 800/5005] Time 0.349 (0.368) Data 0.001 (0.003) Loss 6.1275 (6.1186) Acc@1 0.00 (1.77) Acc@5 7.03 (6.41) Memory(MB) 8186[0m
2020-07-10 14:21:53,925 [32mINFO[0m: Epoch: [1/1][ 820/5005] Time 0.349 (0.367) Data 0.001 (0.003) Loss 6.1895 (6.0954) Acc@1 1.95 (1.86) Acc@5 6.25 (6.88) Memory(MB) 8186[0m
2020-07-10 14:22:00,937 [32mINFO[0m: Epoch: [1/1][ 840/5005] Time 0.348 (0.362) Data 0.001 (0.002) Loss 5.9412 (6.0880) Acc@1 3.12 (1.73) Acc@5 7.81 (7.12) Memory(MB) 8186[0m
2020-07-10 14:22:08,500 [32mINFO[0m: Epoch: [1/1][ 860/5005] Time 0.349 (0.365) Data 0.001 (0.003) Loss 6.1372 (6.0798) Acc@1 1.56 (1.81) Acc@5 5.47 (6.98) Memory(MB) 8186[0m
2020-07-10 14:22:15,499 [32mINFO[0m: Epoch: [1/1][ 880/5005] Time 0.351 (0.365) Data 0.001 (0.003) Loss 6.0534 (6.0627) Acc@1 1.56 (1.92) Acc@5 7.03 (7.33) Memory(MB) 8186[0m
2020-07-10 14:22:22,516 [32mINFO[0m: Epoch: [1/1][ 900/5005] Time 0.351 (0.362) Data 0.001 (0.002) Loss 6.0040 (6.0485) Acc@1 2.34 (2.04) Acc@5 8.20 (7.17) Memory(MB) 8186[0m
2020-07-10 14:22:30,175 [32mINFO[0m: Epoch: [1/1][ 920/5005] Time 0.349 (0.365) Data 0.001 (0.003) Loss 5.9319 (6.0182) Acc@1 2.34 (2.16) Acc@5 8.59 (7.74) Memory(MB) 8186[0m
2020-07-10 14:22:37,219 [32mINFO[0m: Epoch: [1/1][ 940/5005] Time 0.350 (0.359) Data 0.001 (0.002) Loss 6.0550 (6.0032) Acc@1 1.95 (2.14) Acc@5 7.81 (7.64) Memory(MB) 8186[0m
2020-07-10 14:22:44,762 [32mINFO[0m: Epoch: [1/1][ 960/5005] Time 0.350 (0.362) Data 0.001 (0.003) Loss 6.1772 (5.9695) Acc@1 1.56 (2.37) Acc@5 5.08 (7.91) Memory(MB) 8186[0m
2020-07-10 14:22:51,775 [32mINFO[0m: Epoch: [1/1][ 980/5005] Time 0.351 (0.362) Data 0.001 (0.003) Loss 5.9169 (5.9510) Acc@1 1.95 (2.48) Acc@5 9.77 (8.27) Memory(MB) 8186[0m
2020-07-10 14:22:58,786 [32mINFO[0m: Epoch: [1/1][1000/5005] Time 0.353 (0.359) Data 0.001 (0.002) Loss 5.9210 (5.9365) Acc@1 1.95 (2.46) Acc@5 8.20 (8.60) Memory(MB) 8186[0m
2020-07-10 14:23:06,752 [32mINFO[0m: Epoch: [1/1][1020/5005] Time 0.352 (0.363) Data 0.001 (0.003) Loss 5.8300 (5.9297) Acc@1 2.73 (2.48) Acc@5 11.72 (8.78) Memory(MB) 8186[0m
2020-07-10 14:23:13,774 [32mINFO[0m: Epoch: [1/1][1040/5005] Time 0.351 (0.363) Data 0.001 (0.003) Loss 5.9754 (5.9267) Acc@1 3.12 (2.53) Acc@5 8.59 (8.84) Memory(MB) 8186[0m
2020-07-10 14:23:20,786 [32mINFO[0m: Epoch: [1/1][1060/5005] Time 0.351 (0.361) Data 0.001 (0.002) Loss 5.8507 (5.9009) Acc@1 0.39 (2.61) Acc@5 9.77 (9.48) Memory(MB) 8186[0m
2020-07-10 14:23:28,308 [32mINFO[0m: Epoch: [1/1][1080/5005] Time 0.348 (0.363) Data 0.001 (0.002) Loss 5.8895 (5.8833) Acc@1 3.12 (2.72) Acc@5 11.72 (9.67) Memory(MB) 8186[0m
2020-07-10 14:23:35,328 [32mINFO[0m: Epoch: [1/1][1100/5005] Time 0.349 (0.363) Data 0.001 (0.002) Loss 5.7143 (5.8547) Acc@1 3.52 (2.74) Acc@5 12.50 (10.05) Memory(MB) 8186[0m
2020-07-10 14:23:42,337 [32mINFO[0m: Epoch: [1/1][1120/5005] Time 0.349 (0.360) Data 0.002 (0.002) Loss 5.9390 (5.8424) Acc@1 2.34 (2.74) Acc@5 7.81 (9.90) Memory(MB) 8186[0m
2020-07-10 14:23:50,528 [32mINFO[0m: Epoch: [1/1][1140/5005] Time 0.349 (0.366) Data 0.001 (0.002) Loss 5.6701 (5.8267) Acc@1 1.56 (2.81) Acc@5 13.28 (10.23) Memory(MB) 8186[0m
2020-07-10 14:23:57,563 [32mINFO[0m: Epoch: [1/1][1160/5005] Time 0.351 (0.363) Data 0.001 (0.002) Loss 5.9955 (5.8248) Acc@1 3.52 (2.99) Acc@5 7.81 (10.62) Memory(MB) 8186[0m
2020-07-10 14:24:05,805 [32mINFO[0m: Epoch: [1/1][1180/5005] Time 0.349 (0.369) Data 0.001 (0.002) Loss 5.9541 (5.8045) Acc@1 1.95 (3.20) Acc@5 10.16 (11.21) Memory(MB) 8186[0m
2020-07-10 14:24:12,833 [32mINFO[0m: Epoch: [1/1][1200/5005] Time 0.349 (0.370) Data 0.001 (0.002) Loss 5.7770 (5.8028) Acc@1 3.52 (3.29) Acc@5 12.11 (10.91) Memory(MB) 8186[0m
2020-07-10 14:24:19,854 [32mINFO[0m: Epoch: [1/1][1220/5005] Time 0.350 (0.365) Data 0.001 (0.002) Loss 5.6422 (5.7741) Acc@1 3.91 (3.33) Acc@5 11.33 (11.08) Memory(MB) 8186[0m
2020-07-10 14:24:27,425 [32mINFO[0m: Epoch: [1/1][1240/5005] Time 0.350 (0.368) Data 0.001 (0.002) Loss 5.5717 (5.7631) Acc@1 5.08 (3.42) Acc@5 12.89 (11.14) Memory(MB) 8186[0m
2020-07-10 14:24:34,455 [32mINFO[0m: Epoch: [1/1][1260/5005] Time 0.350 (0.368) Data 0.001 (0.002) Loss 5.9424 (5.7483) Acc@1 5.08 (3.64) Acc@5 12.11 (11.64) Memory(MB) 8186[0m
2020-07-10 14:24:41,477 [32mINFO[0m: Epoch: [1/1][1280/5005] Time 0.352 (0.365) Data 0.001 (0.002) Loss 5.7198 (5.7492) Acc@1 2.34 (3.71) Acc@5 8.20 (11.73) Memory(MB) 8186[0m
2020-07-10 14:24:49,442 [32mINFO[0m: Epoch: [1/1][1300/5005] Time 0.350 (0.370) Data 0.001 (0.002) Loss 5.5736 (5.7361) Acc@1 5.47 (3.66) Acc@5 13.28 (11.82) Memory(MB) 8186[0m
2020-07-10 14:24:56,477 [32mINFO[0m: Epoch: [1/1][1320/5005] Time 0.350 (0.370) Data 0.001 (0.002) Loss 5.7220 (5.7021) Acc@1 3.91 (3.67) Acc@5 10.16 (11.96) Memory(MB) 8186[0m
2020-07-10 14:25:04,417 [32mINFO[0m: Epoch: [1/1][1340/5005] Time 0.401 (0.369) Data 0.052 (0.002) Loss 5.7764 (5.6880) Acc@1 3.91 (3.55) Acc@5 10.94 (11.98) Memory(MB) 8186[0m
2020-07-10 14:25:11,432 [32mINFO[0m: Epoch: [1/1][1360/5005] Time 0.350 (0.369) Data 0.001 (0.002) Loss 5.5769 (5.6845) Acc@1 5.08 (3.73) Acc@5 12.50 (12.20) Memory(MB) 8186[0m
2020-07-10 14:25:18,436 [32mINFO[0m: Epoch: [1/1][1380/5005] Time 0.348 (0.362) Data 0.001 (0.002) Loss 5.6767 (5.6640) Acc@1 3.52 (3.91) Acc@5 12.11 (12.51) Memory(MB) 8186[0m
2020-07-10 14:25:26,128 [32mINFO[0m: Epoch: [1/1][1400/5005] Time 0.350 (0.366) Data 0.001 (0.002) Loss 5.7117 (5.6376) Acc@1 4.69 (4.40) Acc@5 12.89 (13.30) Memory(MB) 8186[0m
2020-07-10 14:25:33,138 [32mINFO[0m: Epoch: [1/1][1420/5005] Time 0.351 (0.366) Data 0.001 (0.002) Loss 5.7594 (5.6191) Acc@1 3.91 (4.39) Acc@5 12.50 (13.66) Memory(MB) 8186[0m
2020-07-10 14:25:40,157 [32mINFO[0m: Epoch: [1/1][1440/5005] Time 0.349 (0.363) Data 0.001 (0.002) Loss 5.6677 (5.6242) Acc@1 4.69 (4.31) Acc@5 13.28 (13.46) Memory(MB) 8186[0m
2020-07-10 14:25:48,560 [32mINFO[0m: Epoch: [1/1][1460/5005] Time 0.349 (0.370) Data 0.002 (0.002) Loss 5.6524 (5.6141) Acc@1 3.91 (4.45) Acc@5 13.28 (13.66) Memory(MB) 8186[0m
2020-07-10 14:25:55,558 [32mINFO[0m: Epoch: [1/1][1480/5005] Time 0.350 (0.370) Data 0.001 (0.002) Loss 5.6177 (5.5950) Acc@1 3.91 (4.56) Acc@5 12.50 (13.82) Memory(MB) 8186[0m
/mnt/cache/share/platform/env/miniconda3.6/envs/pat20200703/lib/python3.6/site-packages/PIL/TiffImagePlugin.py:804: UserWarning: Corrupt EXIF data.  Expecting to read 4 bytes but only got 0. 
  warnings.warn(str(msg))
2020-07-10 14:26:21,744 [32mINFO[0m: Test: [  0/196] Time 14.615 (14.615) Loss 4.8197 (4.8197) Acc@1 15.62 (15.62) Acc@5 25.00 (25.00)[0m
2020-07-10 14:26:24,554 [32mINFO[0m: Test: [ 20/196] Time 0.197 (0.136) Loss 5.1702 (5.3216) Acc@1 9.38 (6.70) Acc@5 25.00 (18.45)[0m
2020-07-10 14:26:26,921 [32mINFO[0m: Test: [ 40/196] Time 0.110 (0.124) Loss 4.6842 (5.2687) Acc@1 6.25 (6.86) Acc@5 12.50 (18.60)[0m
2020-07-10 14:26:29,978 [32mINFO[0m: Test: [ 60/196] Time 0.107 (0.145) Loss 5.5068 (5.2356) Acc@1 3.12 (7.07) Acc@5 12.50 (18.24)[0m
2020-07-10 14:26:32,602 [32mINFO[0m: Test: [ 80/196] Time 0.112 (0.130) Loss 5.6795 (5.2785) Acc@1 0.00 (6.48) Acc@5 3.12 (17.48)[0m
2020-07-10 14:26:35,512 [32mINFO[0m: Test: [100/196] Time 0.110 (0.112) Loss 5.5566 (5.2805) Acc@1 6.25 (6.40) Acc@5 25.00 (17.48)[0m
2020-07-10 14:26:38,192 [32mINFO[0m: Test: [120/196] Time 0.111 (0.132) Loss 5.2187 (5.2686) Acc@1 6.25 (6.51) Acc@5 15.62 (17.77)[0m
2020-07-10 14:26:40,823 [32mINFO[0m: Test: [140/196] Time 0.110 (0.132) Loss 5.0656 (5.2878) Acc@1 6.25 (6.32) Acc@5 21.88 (17.66)[0m
2020-07-10 14:26:43,581 [32mINFO[0m: Test: [160/196] Time 0.110 (0.132) Loss 5.5528 (5.2982) Acc@1 9.38 (6.35) Acc@5 18.75 (17.57)[0m
2020-07-10 14:26:46,343 [32mINFO[0m: Test: [180/196] Time 0.107 (0.124) Loss 5.4200 (5.3016) Acc@1 3.12 (6.11) Acc@5 18.75 (17.40)[0m
2020-07-10 14:26:51,879 [32mINFO[0m:  Rank 0 Loss 5.2973 Acc@1 379 Acc@5 1100 total_size 6250[0m
2020-07-10 14:26:51,880 [32mINFO[0m:  Rank 1 Loss 5.3525 Acc@1 361 Acc@5 1075 total_size 6250[0m
2020-07-10 14:26:51,881 [32mINFO[0m:  Rank 4 Loss 5.3945 Acc@1 346 Acc@5 1047 total_size 6250[0m
2020-07-10 14:26:51,882 [32mINFO[0m:  Rank 6 Loss 5.3582 Acc@1 326 Acc@5 1022 total_size 6250[0m
2020-07-10 14:26:51,883 [32mINFO[0m:  Rank 3 Loss 5.3151 Acc@1 359 Acc@5 1044 total_size 6250[0m
2020-07-10 14:26:51,883 [32mINFO[0m:  Rank 2 Loss 5.3118 Acc@1 366 Acc@5 1068 total_size 6250[0m
2020-07-10 14:26:51,883 [32mINFO[0m:  Rank 7 Loss 5.3434 Acc@1 342 Acc@5 1055 total_size 6250[0m
2020-07-10 14:26:51,884 [32mINFO[0m:  Rank 5 Loss 5.3093 Acc@1 334 Acc@5 1067 total_size 6250[0m
2020-07-10 14:26:51,936 [32mINFO[0m:  * All Loss 5.3352 Acc@1 5.626 (2813/50000) Acc@5 16.956 (8478/50000)[0m
